{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { notificarErro } from '../Notificacao/index';\nimport { Form, Input, Button, Select, Divider } from 'antd';\nimport Titulo from '../Titulo';\n\nfunction FormUsuario({\n  cadastrar,\n  cancelar,\n  atualizar,\n  usuarioUpdate\n}) {\n  const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n  const [usuario, setUsuario] = useState({\n    nome: '',\n    funcao: '',\n    cpfCnpj: ''\n  });\n  useEffect(() => {\n    if (usuarioUpdate) {\n      setUsuario(usuarioUpdate);\n    }\n  }, [usuarioUpdate]);\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = async values => {\n    const {\n      nome,\n      funcao,\n      cpfCnpj,\n      senha,\n      confirmSenha\n    } = values;\n\n    if (senha !== confirmSenha) {\n      notificarErro('As senhas não são iguais');\n    } else {\n      const usuario = {\n        nome,\n        funcao,\n        cpfCnpj,\n        senha\n      };\n      cadastrar(usuario);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, !atualizar && React.createElement(Titulo, {\n    nome: \"Cadastro de Usu\\xE1rios\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), atualizar && React.createElement(Titulo, {\n    nome: \"Atualizar Usu\\xE1rio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true,\n      nome: usuario.nome,\n      funcao: usuario.funcao,\n      cpfCnpj: usuario.cpfCnpj\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    onValuesChange: onFormLayoutChange,\n    size: \"larger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Nome\",\n    name: \"nome\",\n    rules: [{\n      required: true,\n      message: 'O nome é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Cpf/Cnpj\",\n    name: \"cpfCnpj\",\n    rules: [{\n      required: true,\n      message: 'O CPF/Cnpj é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Fun\\xE7\\xE3o\",\n    name: \"funcao\",\n    rules: [{\n      required: true,\n      message: 'A Função é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, categorias.map(cat => {\n    return React.createElement(Select.Option, {\n      value: cat,\n      key: cat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, cat);\n  }))), React.createElement(Form.Item, {\n    label: \"Senha\",\n    name: \"senha\",\n    rules: [{\n      required: true,\n      message: 'A senha é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Confirma\\xE7\\xE3o\",\n    name: \"confirmSenha\",\n    rules: [{\n      required: true,\n      message: 'A confirmação da senha é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), atualizar && React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Atualizar\"), !atualizar && React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Salvar\"), React.createElement(Button, {\n    type: \"danger\",\n    onClick: cancelar,\n    style: {\n      marginLeft: '2px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Cancelar\"))));\n}\n\nexport default FormUsuario;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js"],"names":["React","useState","useEffect","notificarErro","Form","Input","Button","Select","Divider","Titulo","FormUsuario","cadastrar","cancelar","atualizar","usuarioUpdate","categorias","setCategorias","usuario","setUsuario","nome","funcao","cpfCnpj","onFormLayoutChange","size","console","log","onFinish","values","senha","confirmSenha","onFinishFailed","errorInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","remember","required","message","map","cat","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { notificarErro} from '../Notificacao/index';\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n    Divider\n} from 'antd';\nimport Titulo from '../Titulo';\n\nfunction FormUsuario({ cadastrar, cancelar, atualizar, usuarioUpdate}) {\n\n    const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n    const [usuario,setUsuario] = useState({nome:'',funcao:'',cpfCnpj:''});\n\n    useEffect(()=>{\n        if(usuarioUpdate){\n            setUsuario(usuarioUpdate);\n        }\n    },[usuarioUpdate]);\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = async (values) => {\n\n        const { nome, funcao, cpfCnpj, senha, confirmSenha } = values;\n\n        if (senha !== confirmSenha) {\n            notificarErro('As senhas não são iguais');\n        } else {\n\n            const usuario = {\n                nome,\n                funcao,\n                cpfCnpj,\n                senha\n            };\n            cadastrar(usuario);\n        }\n    };\n\n\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n\n    return (\n        <div>\n            {!atualizar && <Titulo nome=\"Cadastro de Usuários\" />}\n            {atualizar && <Titulo nome=\"Atualizar Usuário\" />}\n            <Divider />\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                    nome:usuario.nome,\n                    funcao: usuario.funcao,\n                    cpfCnpj: usuario.cpfCnpj\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                onValuesChange={onFormLayoutChange}\n                size='larger'>\n                <Form.Item\n                    label='Nome'\n                    name=\"nome\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O nome é obrigatorio!'\n                        }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label='Cpf/Cnpj'\n                    name=\"cpfCnpj\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O CPF/Cnpj é obrigatorio!'\n                        }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label='Função'\n                    name=\"funcao\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A Função é obrigatoria!',\n                        }]}\n                >\n                    <Select>\n                        {\n                            categorias.map((cat) => {\n                                return (<Select.Option value={cat} key={cat}>{cat}</Select.Option>)\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label='Senha'\n                    name=\"senha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A senha é obrigatoria!'\n                        }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    label='Confirmação'\n                    name=\"confirmSenha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A confirmação da senha é obrigatoria!'\n                        }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    {atualizar &&\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\">\n\n                            Atualizar\n                    </Button>\n                    }\n                    {!atualizar &&\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\">\n                            Salvar\n                    </Button>\n                    }\n                    <Button\n                        type=\"danger\"\n                        onClick={cancelar}\n                        style={{ marginLeft: '2px' }}\n                    >\n                        Cancelar\n                        </Button>\n\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport default FormUsuario;"]},"metadata":{},"sourceType":"module"}