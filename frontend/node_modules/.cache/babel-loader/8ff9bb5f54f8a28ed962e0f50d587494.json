{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport TabelaPedidos from '../../components/TabelaPedidos';\nimport Titulo from '../../components/Titulo';\nimport { CloseOutlined, SearchOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { Container, Breadcrumb } from 'react-bootstrap';\nimport { Divider, Button, Modal, Form, DatePicker } from 'antd';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarErro, notificarSucesso } from '../../components/Notificacao';\nimport { getKeyUsuarioLogado } from '../../../service/usuario';\nimport api from '../../../service/api';\nconst {\n  Item\n} = Breadcrumb;\n\nfunction Pedidos() {\n  const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState('');\n  const [dateString, setDateString] = useState('');\n  const [pedido, setPedido] = useState({});\n  useEffect(() => {}, []);\n\n  const buscarPedidos = async () => {\n    const {\n      data\n    } = await api.get('/pedido', {\n      params: {\n        keyUsuario: getKeyUsuarioLogado()\n      }\n    });\n    return data;\n  };\n\n  const acoes = {\n    title: 'Ações',\n    dataIndex: 'acoes',\n    key: 'acoes',\n    render: (_, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        margin: '1px'\n      },\n      icon: React.createElement(SearchOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }),\n      title: \"Ver Pedido\",\n      onClick: _ => {\n        visualizarPedido(record);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), record.status !== 'CANCELADO' && React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        margin: '1px'\n      },\n      danger: true,\n      title: \"Cancelar Pedido\",\n      icon: React.createElement(CloseOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        showConfirm(\"Cancelar Pedido\", \"Deseja Cancelar o pedido?\", cancelarPedido, record.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), (record.status === 'CANCELADO' || record.status === 'FINALIZADO') && React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        margin: '1px'\n      },\n      title: \"Repetir Pedido\",\n      icon: React.createElement(ReloadOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        repetirPedido(record);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))\n  };\n\n  const visualizarPedido = pedido => {\n    alert(pedido.id);\n  };\n\n  const cancelarPedido = async key => {\n    try {\n      await api.delete(`/pedido/${key}`, {\n        params: {\n          keyUsuario: getKeyUsuarioLogado()\n        }\n      });\n      notificarSucesso('Pedido cancelado com sucesso!');\n      setHandlerUpdateTable(!handlerUpdateTable);\n    } catch (e) {\n      const {\n        mensagem\n      } = e.response.data;\n      notificarErro(mensagem);\n    }\n  };\n\n  const repetirPedido = record => {\n    setPedido(record);\n    showConfirm(\"Repetir Pedido\", \"Deseja repetir o pedido?\", abrirModal);\n  };\n\n  const abrirModal = () => {\n    setModalVisible(true);\n    setLoading(false);\n  };\n\n  const confirmRepetir = async () => {\n    if (dateString) {\n      try {\n        await api.post(`/pedido/renovar/${pedido.key}`, {}, {\n          params: {\n            keyUsuario: getKeyUsuarioLogado(),\n            data: dateString\n          }\n        });\n        notificarSucesso('Pedido refeito com sucesso.');\n      } catch (e) {\n        const {\n          mensagem\n        } = e.response.data;\n        notificarErro(mensagem);\n      }\n    } else {\n      notificarErro('Selecione a data.');\n    }\n  };\n\n  const handleCancel = () => {\n    setModalVisible(false);\n    setLoading(false);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 5\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 10\n    }\n  };\n\n  const onChangeData = (date, dateString) => {\n    const dataSelecionada = Date.parse(dateString);\n\n    if (Date.now() >= dataSelecionada) {\n      notificarErro('Data Inválida.');\n    } else {\n      setData(date);\n      setDateString(dateString);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Item, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Principal\"), React.createElement(Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Pedidos\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Titulo, {\n    name: \"Pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(TabelaPedidos, {\n    getData: buscarPedidos,\n    acoes: acoes,\n    handlerUpdateTable: handlerUpdateTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    href: \"/perfilPedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Cadastrar\")), React.createElement(Modal, {\n    title: \"Data do Pedido\",\n    visible: modalVisible,\n    footer: [React.createElement(Button, {\n      key: \"back\",\n      onClick: handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Cancelar\"), React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: loading,\n      onClick: confirmRepetir,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Ok\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Data: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(DatePicker, {\n    value: data,\n    onChange: onChangeData,\n    format: 'DD/MM/YYYY',\n    locale: 'pt-BR',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })))));\n}\n\nexport default Pedidos;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/index.js"],"names":["React","useEffect","useState","TabelaPedidos","Titulo","CloseOutlined","SearchOutlined","ReloadOutlined","Container","Breadcrumb","Divider","Button","Modal","Form","DatePicker","showConfirm","notificarErro","notificarSucesso","getKeyUsuarioLogado","api","Item","Pedidos","handlerUpdateTable","setHandlerUpdateTable","modalVisible","setModalVisible","loading","setLoading","data","setData","dateString","setDateString","pedido","setPedido","buscarPedidos","get","params","keyUsuario","acoes","title","dataIndex","key","render","_","record","margin","visualizarPedido","status","cancelarPedido","repetirPedido","alert","id","delete","e","mensagem","response","abrirModal","confirmRepetir","post","handleCancel","layout","labelCol","span","wrapperCol","tailLayout","offset","onChangeData","date","dataSelecionada","Date","parse","now"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TabelaPedidos from '../../components/TabelaPedidos';\nimport Titulo from '../../components/Titulo';\nimport { CloseOutlined, SearchOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { Container, Breadcrumb } from 'react-bootstrap';\nimport { Divider, Button, Modal, Form, DatePicker } from 'antd';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarErro, notificarSucesso } from '../../components/Notificacao';\nimport { getKeyUsuarioLogado } from '../../../service/usuario';\nimport api from '../../../service/api';\nconst { Item } = Breadcrumb;\n\nfunction Pedidos() {\n\n    const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState('');\n    const [dateString, setDateString] = useState('');\n    const [pedido, setPedido] = useState({});\n\n    useEffect(() => {\n    }, []);\n\n    const buscarPedidos = async () => {\n        const { data } = await api.get('/pedido', { params: { keyUsuario: getKeyUsuarioLogado() } });\n        return data;\n\n    }\n\n    const acoes = {\n        title: 'Ações',\n        dataIndex: 'acoes',\n        key: 'acoes',\n        render: (_, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ margin: '1px' }}\n                    icon={<SearchOutlined />}\n                    title='Ver Pedido'\n                    onClick={_ => { visualizarPedido(record) }}\n                />\n                {record.status !== 'CANCELADO' &&\n                    <Button\n                        type='primary'\n                        style={{ margin: '1px' }}\n                        danger\n                        title='Cancelar Pedido'\n                        icon={<CloseOutlined />}\n                        onClick={_ => {\n                            showConfirm(\"Cancelar Pedido\", \"Deseja Cancelar o pedido?\", cancelarPedido, record.key);\n                        }\n                        }\n                    />\n                }\n                {(record.status === 'CANCELADO' || record.status === 'FINALIZADO') &&\n                    <Button\n                        type='primary'\n                        style={{ margin: '1px' }}\n                        title='Repetir Pedido'\n                        icon={<ReloadOutlined />}\n                        onClick={_ => { repetirPedido(record) }}\n                    />\n                }\n            </span>\n        )\n    };\n\n    const visualizarPedido = pedido => {\n        alert(pedido.id);\n    }\n\n    const cancelarPedido = async (key) => {\n        try {\n            await api.delete(`/pedido/${key}`, { params: { keyUsuario: getKeyUsuarioLogado() } });\n            notificarSucesso('Pedido cancelado com sucesso!');\n            setHandlerUpdateTable(!handlerUpdateTable);\n        } catch (e) {\n            const { mensagem } = e.response.data;\n            notificarErro(mensagem);\n        }\n    }\n\n    const repetirPedido = (record) => {\n        setPedido(record);\n        showConfirm(\"Repetir Pedido\", \"Deseja repetir o pedido?\", abrirModal);\n    }\n\n    const abrirModal = () => {\n        setModalVisible(true);\n        setLoading(false);\n    }\n\n    const confirmRepetir = async () => {\n        if (dateString) {\n            try {\n                await api.post(`/pedido/renovar/${pedido.key}`, {}, { params: {\n                    keyUsuario: getKeyUsuarioLogado(),\n                    data: dateString\n                } });\n                notificarSucesso('Pedido refeito com sucesso.')\n            } catch (e) {\n                const { mensagem } = e.response.data;\n                notificarErro(mensagem);\n            }\n        }else{\n            notificarErro('Selecione a data.');\n        }\n    }\n\n    const handleCancel = () => {\n        setModalVisible(false);\n        setLoading(false);\n    }\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 5,\n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: {\n            offset: 2,\n            span: 10,\n        },\n    };\n\n    const onChangeData = (date, dateString) => {\n        const dataSelecionada = Date.parse(dateString);\n        if(Date.now() >= dataSelecionada){\n            notificarErro('Data Inválida.');\n        }else{\n            setData(date);\n            setDateString(dateString);\n        }\n    }\n\n    return (\n        <div>\n            <Breadcrumb>\n                <Item href=\"/\">Principal</Item>\n                <Item active>Pedidos</Item>\n            </Breadcrumb>\n            <Container>\n                <Titulo name=\"Pedidos\" />\n                <Divider />\n                <TabelaPedidos getData={buscarPedidos} acoes={acoes} handlerUpdateTable={handlerUpdateTable} />\n                <Divider />\n                <Button type='primary' href='/perfilPedidos'>Cadastrar</Button>\n            </Container>\n            <Modal\n                title=\"Data do Pedido\"\n                visible={modalVisible}\n                footer={[\n                    <Button key=\"back\" onClick={handleCancel}>\n                        Cancelar\n                        </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={confirmRepetir}>\n                        Ok\n                        </Button>,\n                ]}\n\n            >\n                <Form {...layout}>\n                    <Form.Item\n                        {...tailLayout}\n                        label='Data: '>\n                        <DatePicker value={data} onChange={onChangeData} format={'DD/MM/YYYY'} locale={'pt-BR'} />\n                    </Form.Item>\n\n                </Form>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Pedidos;"]},"metadata":{},"sourceType":"module"}