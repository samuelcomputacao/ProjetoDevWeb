{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/TabelaHortalicas/index.js\";\nimport React from 'react';\nimport './index.css';\nimport { Table, Button } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\nfunction TabelaHortalicas({\n  dataSource,\n  acoes\n}) {\n  state = {\n    searchText: '',\n    searchedColumn: ''\n  };\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => React.createElement(\"div\", {\n      style: {\n        padding: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Input, {\n      ref: node => {\n        this.searchInput = node;\n      },\n      placeholder: `Search ${dataIndex}`,\n      value: selectedKeys[0],\n      onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n      onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n      style: {\n        width: 188,\n        marginBottom: 8,\n        display: 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n      icon: React.createElement(SearchOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }),\n      size: \"small\",\n      style: {\n        width: 90,\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Search\"), React.createElement(Button, {\n      onClick: () => this.handleReset(clearFilters),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Reset\")),\n    filterIcon: filtered => React.createElement(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }),\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => this.state.searchedColumn === dataIndex ? React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [this.state.searchText],\n      autoEscape: true,\n      textToHighlight: text.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : text\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({\n      searchText: ''\n    });\n  };\n\n  const columns = [{\n    title: 'Codigo',\n    dataIndex: 'key',\n    key: 'key',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.key - b.key\n  }, {\n    title: 'Nome',\n    dataIndex: 'nome',\n    key: 'nome',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.nome > b.nome ? 1 : b.nome > a.nome ? -1 : 0\n  }, {\n    title: 'Categoria',\n    dataIndex: 'categoria',\n    key: 'categoria',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.categoria > b.categoria ? 1 : b.categoria > a.categoria ? -1 : 0,\n    fixed: 'left',\n    filters: [{\n      text: 'Folhas',\n      value: 'Folhas'\n    }, {\n      text: 'Raizes',\n      value: 'Raizes'\n    }, {\n      text: 'Legumes',\n      value: 'Legumes'\n    }],\n    onFilter: (value, record) => record.categoria.indexOf(value) === 0\n  }, {\n    title: 'Classificação',\n    dataIndex: 'classificacao',\n    key: 'classificacao',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.classificacao - b.classificacao\n  }, {\n    title: 'Valor',\n    dataIndex: 'valor',\n    key: 'valor',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.valor - b.valor\n  }, acoes];\n  return React.createElement(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    className: \"Tabela\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  });\n}\n\nexport default TabelaHortalicas;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/TabelaHortalicas/index.js"],"names":["React","Table","Button","Highlighter","SearchOutlined","TabelaHortalicas","dataSource","acoes","state","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","setState","columns","title","key","defaultSortOrder","sorter","a","b","nome","categoria","fixed","filters","indexOf","classificacao","valor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport { Table, Button } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\nfunction TabelaHortalicas({ dataSource, acoes }) {\n\n    state = {\n        searchText: '',\n        searchedColumn: '',\n    };\n\n    const getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        this.searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Button\n                    type=\"primary\"\n                    onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                    icon={<SearchOutlined />}\n                    size=\"small\"\n                    style={{ width: 90, marginRight: 8 }}\n                >\n                    Search\n            </Button>\n                <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                    Reset\n            </Button>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) =>\n            record[dataIndex]\n                .toString()\n                .toLowerCase()\n                .includes(value.toLowerCase()),\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text =>\n            this.state.searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[this.state.searchText]}\n                    autoEscape\n                    textToHighlight={text.toString()}\n                />\n            ) : (\n                    text\n                ),\n    });\n\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        this.setState({\n            searchText: selectedKeys[0],\n            searchedColumn: dataIndex,\n        });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n\n    const columns = [\n        {\n            title: 'Codigo',\n            dataIndex: 'key',\n            key: 'key',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.key - b.key,\n\n        },\n        {\n            title: 'Nome',\n            dataIndex: 'nome',\n            key: 'nome',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => ((a.nome > b.nome) ? 1 : ((b.nome > a.nome) ? -1 : 0))\n        },\n        {\n            title: 'Categoria',\n            dataIndex: 'categoria',\n            key: 'categoria',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => ((a.categoria > b.categoria) ? 1 : ((b.categoria > a.categoria) ? -1 : 0)),\n            fixed: 'left',\n            filters: [\n                {\n                    text: 'Folhas',\n                    value: 'Folhas',\n                },\n                {\n                    text: 'Raizes',\n                    value: 'Raizes',\n                },\n                {\n                    text: 'Legumes',\n                    value: 'Legumes',\n                },\n            ],\n            onFilter: (value, record) => record.categoria.indexOf(value) === 0,\n        },\n        {\n            title: 'Classificação',\n            dataIndex: 'classificacao',\n            key: 'classificacao',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.classificacao - b.classificacao,\n\n        },\n        {\n            title: 'Valor',\n            dataIndex: 'valor',\n            key: 'valor',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.valor - b.valor,\n        },\n        acoes,\n    ];\n\n    return (\n        <Table dataSource={dataSource} columns={columns} className='Tabela' />\n    );\n}\n\nexport default TabelaHortalicas;"]},"metadata":{},"sourceType":"module"}