{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { notificarErro, notificarSucesso } from '../Notificacao/index';\nimport api from '../../../service/api';\nimport { Form, Input, Button, Select } from 'antd';\nimport { Redirect } from 'react-router-dom';\n\nfunction FormUsuario({\n  atualizar\n}) {\n  const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n  const [usuario, setUsuario] = useState({});\n  const [redirect, setRedirect] = useState(false);\n  const [key, setKey] = useState('');\n  useEffect(() => {\n    async function buscaUsuario() {\n      const params = new URLSearchParams(location.search);\n      const k = params.get('key');\n      setKey(k);\n      console.log(k);\n    }\n\n    buscaUsuario();\n  }, [location]);\n\n  const cadastrarUsuario = async usuario => {\n    try {\n      await api.post('/usuario', {\n        usuario\n      });\n      notificarSucesso('O usuário foi cadastrado com sucesso.');\n      setTimeout(() => {\n        setRedirect(true);\n      }, 200);\n    } catch (e) {\n      const {\n        mensagem\n      } = e.response.data;\n      notificarErro(mensagem);\n    }\n  };\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = async values => {\n    const {\n      nome,\n      funcao,\n      cpfCnpj,\n      senha,\n      confirmSenha\n    } = values;\n\n    if (senha !== confirmSenha) {\n      notificarErro('As senhas não são iguais');\n    } else {\n      const usuario = {\n        nome,\n        funcao,\n        cpfCnpj,\n        senha\n      };\n      cadastrarUsuario(usuario);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n\n  if (redirect) {\n    return React.createElement(Redirect, {\n      to: \"/usuarios\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true,\n        nome: key,\n        funcao: usuario.funcao,\n        cpfCnpj: usuario.cpfCnpj\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      onValuesChange: onFormLayoutChange,\n      size: \"larger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Nome\",\n      name: \"nome\",\n      rules: [{\n        required: true,\n        message: 'O nome é obrigatorio!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Cpf/Cnpj\",\n      name: \"cpfCnpj\",\n      rules: [{\n        required: true,\n        message: 'O CPF/Cnpj é obrigatorio!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Fun\\xE7\\xE3o\",\n      name: \"funcao\",\n      rules: [{\n        required: true,\n        message: 'A Função é obrigatoria!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, categorias.map(cat => {\n      return React.createElement(Select.Option, {\n        value: cat,\n        key: cat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, cat);\n    }))), React.createElement(Form.Item, {\n      label: \"Senha\",\n      name: \"senha\",\n      rules: [{\n        required: true,\n        message: 'A senha é obrigatoria!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Confirma\\xE7\\xE3o\",\n      name: \"confirmSenha\",\n      rules: [{\n        required: true,\n        message: 'A confirmação da senha é obrigatoria!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), atualizar && React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Atualizar\"), !atualizar && React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(Button, {\n      type: \"danger\",\n      href: \"/usuarios\",\n      style: {\n        marginLeft: '2px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Cancelar\")));\n  }\n}\n\nexport default FormUsuario;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js"],"names":["React","useState","useEffect","notificarErro","notificarSucesso","api","Form","Input","Button","Select","Redirect","FormUsuario","atualizar","categorias","setCategorias","usuario","setUsuario","redirect","setRedirect","key","setKey","buscaUsuario","params","URLSearchParams","location","search","k","get","console","log","cadastrarUsuario","post","setTimeout","e","mensagem","response","data","onFormLayoutChange","size","onFinish","values","nome","funcao","cpfCnpj","senha","confirmSenha","onFinishFailed","errorInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","remember","required","message","map","cat","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from 'react';\nimport { notificarErro, notificarSucesso } from '../Notificacao/index';\nimport api from '../../../service/api';\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n} from 'antd';\nimport { Redirect } from 'react-router-dom';\n\nfunction FormUsuario({ atualizar}) {\n\n    const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n    const [usuario, setUsuario] = useState({});\n    const [redirect, setRedirect] = useState(false);\n\n    const [key,setKey] = useState('');\n\n    useEffect(()=>{\n        async function buscaUsuario(){\n            const params = new URLSearchParams(location.search); \n            const k = params.get('key');\n            setKey(k);\n            console.log(k);\n        }\n        buscaUsuario();\n    },[location]);\n\n\n    const cadastrarUsuario = async (usuario) => {\n        try {\n            await api.post('/usuario', { usuario });\n            notificarSucesso('O usuário foi cadastrado com sucesso.');\n            setTimeout(() => {\n                setRedirect(true);\n            }, 200);\n        } catch (e) {\n            const { mensagem } = e.response.data;\n            notificarErro(mensagem);\n        }\n\n    }\n\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = async (values) => {\n\n        const { nome, funcao, cpfCnpj, senha, confirmSenha } = values;\n\n        if (senha !== confirmSenha) {\n            notificarErro('As senhas não são iguais');\n        } else {\n\n            const usuario = {\n                nome,\n                funcao,\n                cpfCnpj,\n                senha\n            };\n            cadastrarUsuario(usuario);\n        }\n    };\n\n\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n    if (redirect) {\n        return (<Redirect to=\"/usuarios\" />);\n    } else {\n        return (\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                    nome: key,\n                    funcao: usuario.funcao,\n                    cpfCnpj: usuario.cpfCnpj\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                onValuesChange={onFormLayoutChange}\n                size='larger'>\n                <Form.Item\n                    label='Nome'\n                    name=\"nome\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O nome é obrigatorio!'\n                        }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label='Cpf/Cnpj'\n                    name=\"cpfCnpj\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O CPF/Cnpj é obrigatorio!'\n                        }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label='Função'\n                    name=\"funcao\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A Função é obrigatoria!',\n                        }]}\n                >\n                    <Select>\n                        {\n                            categorias.map((cat) => {\n                                return (<Select.Option value={cat} key={cat}>{cat}</Select.Option>)\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label='Senha'\n                    name=\"senha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A senha é obrigatoria!'\n                        }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    label='Confirmação'\n                    name=\"confirmSenha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A confirmação da senha é obrigatoria!'\n                        }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    {atualizar &&\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\">\n\n                            Atualizar\n                    </Button>\n                    }\n                    {!atualizar &&\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\">\n                            Salvar\n                    </Button>\n                    }\n                    <Button\n                        type=\"danger\"\n                        href=\"/usuarios\"\n                        style={{ marginLeft: '2px' }}\n                    >\n                        Cancelar\n                        </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default FormUsuario;"]},"metadata":{},"sourceType":"module"}