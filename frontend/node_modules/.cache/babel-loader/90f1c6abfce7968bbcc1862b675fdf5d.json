{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/perfil.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Form, Input, Button, Divider, notification, Modal, InputNumber, DatePicker } from 'antd';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nimport api from '../../../service/api';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarErro, notificarSucesso } from '../../components/Notificacao';\nimport { getKeyUsuarioLogado } from '../../../service/usuario';\nimport { useHistory } from 'react-router-dom';\nimport FooterButtons from \"../../components/FooterButtons\";\nconst {\n  Item\n} = Breadcrumb;\n\nfunction PerfilPedidos({\n  location\n}) {\n  const [data, setData] = useState('');\n  const [quantidade, setQuantidade] = useState(1);\n  const [pedido, setPedido] = useState([]);\n  const [dateString, setDateString] = useState('');\n  const [hortalica, setHortalica] = useState({});\n  const [valorTotal, setValorTotal] = useState(0);\n  const historico = useHistory();\n  const loading = false;\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n  const [cadastro, setCadastro] = useState(false);\n  const [keyPedido, setKeyPedido] = useState('');\n  const pedidoVisualizacao = {};\n  useEffect(() => {\n    async function verificaParams() {\n      const params = new URLSearchParams(location.search);\n      const tipo = params.get('cadastro');\n      const key = params.get('key');\n      setCadastro(true);\n\n      if (tipo === '0') {\n        setKeyPedido(key);\n        setCadastro(false);\n        const {\n          data\n        } = await api.get(`/pedido/${key}`);\n        const ped = data.pedido;\n        setDateString(ped.data);\n        const tam = ped.hortalicas.length;\n        let i = 0;\n        let somatorio = 0;\n\n        while (i < tam) {\n          const hort = ped.hortalicas[i];\n\n          if (hort.quantidade <= 0) {\n            notificarErro('Quantidade inválida.');\n          } else {\n            somatorio = somatorio + hort.valor * hort.quantidade;\n          }\n\n          setPedido(ped.hortalicas);\n          setValorTotal(somatorio);\n          console.log(hort);\n          i++;\n        }\n      }\n    }\n\n    verificaParams();\n  }, [location]);\n  const acoes = {\n    title: 'Inserir',\n    dataIndex: 'inserir',\n    key: 'inserir',\n    render: (_, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(ArrowRightOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        setHortalica(record);\n        showModal();\n      },\n      title: \"Inserir\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))\n  };\n\n  const openNotification = (msg, descricao) => {\n    notification.open({\n      message: `${msg}`,\n      description: `${descricao}`\n    });\n  };\n\n  const acoesPedido = {\n    title: 'Remover',\n    dataIndex: 'remover',\n    key: 'remover',\n    render: (_, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }),\n      danger: true,\n      onClick: _ => {\n        removerPedido(record.key);\n      },\n      title: \"Remover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))\n  };\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 5\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 5\n    }\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const salvarPedido = async () => {\n    let listaHortalicas = [];\n    await pedido.forEach(pedido => {\n      listaHortalicas = [...listaHortalicas, {\n        keyHortalica: pedido.key,\n        quantidade: pedido.quantidade\n      }];\n    });\n    const pedidoRequisicao = {\n      data: dateString,\n      hortalicas: listaHortalicas\n    };\n\n    try {\n      await api.post('/pedido', pedidoRequisicao, {\n        params: {\n          keyUsuario: getKeyUsuarioLogado()\n        }\n      });\n      notificarSucesso('Pedido cadastrado com sucesso.');\n      historico.push('/pedidos');\n    } catch (e) {\n      notificarErro(e.response.data.mensagem);\n    }\n  };\n\n  const atualizarPedido = async () => {\n    let listaHortalicas = [];\n    await pedido.forEach(pedido => {\n      listaHortalicas = [...listaHortalicas, {\n        keyHortalica: pedido.key,\n        quantidade: pedido.quantidade\n      }];\n    });\n    const pedidoRequisicao = {\n      hortalicas: listaHortalicas\n    };\n\n    try {\n      await api.put(`/pedido/${pedido.key}`, pedidoRequisicao, {\n        params: {\n          keyUsuario: getKeyUsuarioLogado()\n        }\n      });\n      notificarSucesso('Pedido Atualizado com sucesso.');\n      historico.push('/pedidos');\n    } catch (e) {\n      notificarErro(e.response.data.mensagem);\n    }\n  };\n\n  const inserirHortalica = () => {\n    if (quantidade <= 0) {\n      notificarErro('Quantidade inválida.');\n    } else {\n      let possui = false;\n      pedido.forEach(hort => {\n        if (hort.key === hortalica.key) {\n          possui = true;\n        }\n      });\n\n      if (!possui) {\n        setPedido([...pedido, { ...hortalica,\n          quantidade\n        }]);\n        setValorTotal(valorTotal + hortalica.valor * quantidade);\n        setHandlerUpdateTable(!handlerUpdateTable);\n        setQuantidade(1);\n      } else {\n        openNotification('Aviso!', 'A hortaliça já foi adicionada!');\n      }\n\n      handleCancel();\n    }\n  };\n\n  const removerPedido = key => {\n    let pedidoAux = [];\n    let valorReferencia = 0;\n    pedido.forEach(hort => {\n      if (hort.key !== key) {\n        pedidoAux = [...pedidoAux, hort];\n      } else {\n        valorReferencia = hort.valor * hort.quantidade;\n      }\n    });\n    showConfirm('Remover hortaliça', `Deseja remover a hortaliça de código: ${key}?`, atualizarValorPedido, {\n      pedidoAux,\n      valorReferencia\n    });\n  };\n\n  const atualizarValorPedido = async ({\n    pedidoAux,\n    valorReferencia\n  }) => {\n    await setPedido(pedidoAux);\n    setValorTotal(valorTotal - valorReferencia);\n  };\n\n  const getPedidos = () => {\n    return pedido;\n  };\n\n  const getHortalicas = async () => {\n    const {\n      data\n    } = await api.get('/hortalica');\n    return data;\n  };\n\n  const onChangeData = (date, dateString) => {\n    setData(date);\n    setDateString(dateString);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(Item, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"Principal\"), React.createElement(Item, {\n    href: \"/pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Pedidos\"), cadastro && React.createElement(Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Cadastrar\"), !cadastro && React.createElement(Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Visualizar\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, cadastro && React.createElement(Titulo, {\n    nome: \"Cadastro de Pedido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }), !cadastro && React.createElement(Titulo, {\n    nome: \"Visualizar de Pedido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }), cadastro && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Hortali\\xE7as\"), React.createElement(TabelaHortalicas, {\n    getData: getHortalicas,\n    acoes: acoes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Pedido\"), React.createElement(TabelaHortalicas, {\n    getData: getPedidos,\n    acoes: acoesPedido,\n    handleUpdateTable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }), React.createElement(Form, Object.assign({}, layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Valor Total: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }), React.createElement(Input, {\n    readOnly: true,\n    value: valorTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Data: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }), cadastro && React.createElement(DatePicker, {\n    value: data,\n    onChange: onChangeData,\n    format: 'DD/MM/YYYY',\n    locale: 'pt-BR',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), !cadastro && React.createElement(Input, {\n    readOnly: true,\n    value: dateString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }))), cadastro && React.createElement(FooterButtons, {\n    label1: \"Salvar\",\n    label2: \"Voltar\",\n    callback1: salvarPedido,\n    callback2: historico.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }), !cadastro && React.createElement(FooterButtons, {\n    label1: \"Atualizar\",\n    label2: \"Cancelar\",\n    callback1: atualizarPedido,\n    callback2: historico.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    title: \"Quantidade\",\n    visible: visible,\n    onOk: handleOk,\n    confirmLoading: confirmLoading,\n    onCancel: handleCancel,\n    footer: [React.createElement(Button, {\n      key: \"back\",\n      onClick: handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Cancelar\"), React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: loading,\n      onClick: inserirHortalica,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Adicionar\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Quantidade: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }), React.createElement(InputNumber, {\n    min: 1,\n    onChange: value => {\n      setQuantidade(value);\n    },\n    value: quantidade,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  })));\n}\n\nexport default PerfilPedidos;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/perfil.js"],"names":["React","useState","useEffect","ArrowRightOutlined","DeleteOutlined","Form","Input","Button","Divider","notification","Modal","InputNumber","DatePicker","Breadcrumb","Container","Titulo","TabelaHortalicas","api","showConfirm","notificarErro","notificarSucesso","getKeyUsuarioLogado","useHistory","FooterButtons","Item","PerfilPedidos","location","data","setData","quantidade","setQuantidade","pedido","setPedido","dateString","setDateString","hortalica","setHortalica","valorTotal","setValorTotal","historico","loading","visible","setVisible","confirmLoading","setConfirmLoading","handlerUpdateTable","setHandlerUpdateTable","cadastro","setCadastro","keyPedido","setKeyPedido","pedidoVisualizacao","verificaParams","params","URLSearchParams","search","tipo","get","key","ped","tam","hortalicas","length","i","somatorio","hort","valor","console","log","acoes","title","dataIndex","render","_","record","marginLeft","showModal","openNotification","msg","descricao","open","message","description","acoesPedido","removerPedido","layout","labelCol","span","wrapperCol","tailLayout","offset","handleOk","setTimeout","handleCancel","salvarPedido","listaHortalicas","forEach","keyHortalica","pedidoRequisicao","post","keyUsuario","push","e","response","mensagem","atualizarPedido","put","inserirHortalica","possui","pedidoAux","valorReferencia","atualizarValorPedido","getPedidos","getHortalicas","onChangeData","date","goBack","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons';\nimport {\n    Form,\n    Input,\n    Button,\n    Divider,\n    notification,\n    Modal,\n    InputNumber,\n    DatePicker\n} from 'antd';\n\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nimport api from '../../../service/api';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarErro, notificarSucesso } from '../../components/Notificacao';\nimport { getKeyUsuarioLogado } from '../../../service/usuario';\nimport { useHistory } from 'react-router-dom';\nimport FooterButtons from \"../../components/FooterButtons\";\nconst { Item } = Breadcrumb;\n\n\nfunction PerfilPedidos({ location }) {\n\n    const [data, setData] = useState('');\n    const [quantidade, setQuantidade] = useState(1);\n    const [pedido, setPedido] = useState([]);\n    const [dateString, setDateString] = useState('');\n    const [hortalica, setHortalica] = useState({});\n    const [valorTotal, setValorTotal] = useState(0);\n    const historico = useHistory();\n    const loading = false;\n    const [visible, setVisible] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n\n    const [cadastro, setCadastro] = useState(false);\n    const [keyPedido, setKeyPedido] = useState('');\n    const pedidoVisualizacao = {};\n\n\n    useEffect(() => {\n        async function verificaParams() {\n            const params = new URLSearchParams(location.search);\n            const tipo = params.get('cadastro');\n            const key = params.get('key');\n            setCadastro(true);\n            if (tipo === '0') {\n                setKeyPedido(key);\n                setCadastro(false);\n                const { data } = await api.get(`/pedido/${key}`);\n                const ped = data.pedido;\n                setDateString(ped.data);\n               \n                const tam = ped.hortalicas.length;\n                let i = 0;\n                let somatorio = 0;\n                while(i < tam){\n                    const hort = ped.hortalicas[i];\n                    if ( hort.quantidade <= 0) {\n                        notificarErro('Quantidade inválida.');\n                    } else {\n                        somatorio = somatorio + (hort.valor * hort.quantidade);\n                    }\n                    setPedido(ped.hortalicas);\n                    setValorTotal(somatorio);\n                    console.log(hort);\n                    i++;\n                }\n    \n                \n            }\n        }\n        verificaParams();\n    }, [location]);\n\n    const acoes = {\n        title: 'Inserir',\n        dataIndex: 'inserir',\n        key: 'inserir',\n        render: (_, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<ArrowRightOutlined />}\n                    onClick={_ => {\n                        setHortalica(record);\n                        showModal();\n                    }}\n                    title='Inserir'\n                />\n            </span>\n        )\n    }\n\n    const openNotification = (msg, descricao) => {\n        notification.open({\n            message: `${msg}`,\n            description:\n                `${descricao}`,\n        });\n    };\n\n    const acoesPedido = {\n        title: 'Remover',\n        dataIndex: 'remover',\n        key: 'remover',\n        render: (_, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<DeleteOutlined />}\n                    danger\n                    onClick={_ => {\n                        removerPedido(record.key);\n                    }}\n                    title='Remover'\n                />\n            </span>\n        )\n    }\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 5,\n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: {\n            offset: 2,\n            span: 5,\n        },\n    };\n\n    const showModal = () => {\n        setVisible(true);\n    };\n\n    const handleOk = () => {\n        setConfirmLoading(true)\n        setTimeout(() => {\n            setVisible(false);\n            setConfirmLoading(false);\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        setVisible(false);\n    };\n\n    const salvarPedido = async () => {\n        let listaHortalicas = [];\n        await pedido.forEach((pedido) => {\n            listaHortalicas = [...listaHortalicas, {\n                keyHortalica: pedido.key,\n                quantidade:\n                    pedido.quantidade\n            }];\n        });\n\n        const pedidoRequisicao = {\n            data: dateString,\n            hortalicas: listaHortalicas\n        };\n        try {\n            await api.post('/pedido', pedidoRequisicao, { params: { keyUsuario: getKeyUsuarioLogado() } });\n            notificarSucesso('Pedido cadastrado com sucesso.');\n            historico.push('/pedidos');\n        } catch (e) {\n            notificarErro(e.response.data.mensagem);\n        }\n    }\n    const atualizarPedido = async () => {\n        let listaHortalicas = [];\n        await pedido.forEach((pedido) => {\n            listaHortalicas = [...listaHortalicas, {\n                keyHortalica: pedido.key,\n                quantidade:\n                    pedido.quantidade\n            }];\n        });\n\n        const pedidoRequisicao = {\n            hortalicas: listaHortalicas\n        };\n\n        try {\n            await api.put(`/pedido/${pedido.key}`, pedidoRequisicao, { params: { keyUsuario: getKeyUsuarioLogado() } });\n            notificarSucesso('Pedido Atualizado com sucesso.');\n            historico.push('/pedidos');\n        } catch (e) {\n            notificarErro(e.response.data.mensagem);\n        }\n    }\n\n    const inserirHortalica = () => {\n        if (quantidade <= 0) {\n            notificarErro('Quantidade inválida.');\n        } else {\n            let possui = false;\n            pedido.forEach((hort) => {\n                if (hort.key === hortalica.key) {\n                    possui = true;\n                }\n            });\n            if (!possui) {\n                setPedido([...pedido, { ...hortalica, quantidade}])\n                setValorTotal(valorTotal + (hortalica.valor * quantidade));\n                setHandlerUpdateTable(!handlerUpdateTable);\n                setQuantidade(1);\n            } else {\n                openNotification('Aviso!', 'A hortaliça já foi adicionada!');\n            }\n            handleCancel();\n            \n        }\n    }\n\n    const removerPedido = (key) => {\n        let pedidoAux = [];\n        let valorReferencia = 0;\n        pedido.forEach((hort) => {\n            if (hort.key !== key) {\n                pedidoAux = [...pedidoAux, hort];\n            } else {\n                valorReferencia = hort.valor * hort.quantidade;\n            }\n        });\n        showConfirm('Remover hortaliça', `Deseja remover a hortaliça de código: ${key}?`, atualizarValorPedido, { pedidoAux, valorReferencia });\n    }\n\n    const atualizarValorPedido = async ({ pedidoAux, valorReferencia }) => {\n        await setPedido(pedidoAux);\n        setValorTotal(valorTotal - valorReferencia);\n    }\n\n\n    const getPedidos = () => {\n        return pedido;\n    }\n\n    const getHortalicas = async () => {\n        const { data } = await api.get('/hortalica');\n        return data;\n    }\n\n    const onChangeData = (date, dateString) => {\n        setData(date);\n        setDateString(dateString);\n    }\n\n\n    return (\n        <div>\n            <Breadcrumb>\n                <Item href=\"/\">Principal</Item>\n                <Item href=\"/pedidos\">Pedidos</Item>\n                {cadastro && <Item active>Cadastrar</Item>}\n                {!cadastro && <Item active>Visualizar</Item>}\n            </Breadcrumb>\n        <Container>\n            {cadastro && <Titulo nome='Cadastro de Pedido' />}\n            {!cadastro && <Titulo nome='Visualizar de Pedido' />}\n            {cadastro && <div>\n                <Divider />\n                <h2>Hortaliças</h2>\n                <TabelaHortalicas getData={getHortalicas} acoes={acoes} />\n                <Divider />\n            </div>}\n            <h2>Pedido</h2>\n            <TabelaHortalicas getData={getPedidos} acoes={acoesPedido} handleUpdateTable />\n            <Divider />\n            <Form {...layout}>\n                <Form.Item\n                    {...tailLayout}\n                    label='Valor Total: '>\n                    <Input readOnly value={valorTotal} />\n                </Form.Item>\n                <Form.Item\n                    {...tailLayout}\n                    label='Data: '>\n                    {cadastro && <DatePicker value={data} onChange={onChangeData} format={'DD/MM/YYYY'} locale={'pt-BR'} />}\n                    {!cadastro && <Input readOnly value={dateString}/>}\n                </Form.Item>\n            </Form>\n            {cadastro && <FooterButtons label1='Salvar' label2='Voltar' callback1={salvarPedido} callback2={historico.goBack} />}\n            {!cadastro && <FooterButtons label1='Atualizar' label2='Cancelar' callback1={atualizarPedido} callback2={historico.goBack} />}\n            <Modal\n                title=\"Quantidade\"\n                visible={visible}\n                onOk={handleOk}\n                confirmLoading={confirmLoading}\n                onCancel={handleCancel}\n                footer={[\n                    <Button key=\"back\" onClick={handleCancel}>\n                        Cancelar\n                            </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={inserirHortalica}>\n                        Adicionar\n                            </Button>,\n                ]}\n\n            >\n                <Form {...layout}>\n                    <Form.Item {...tailLayout}\n                        label='Quantidade: '\n                    >\n                        <InputNumber min={1} onChange={(value) => {\n                            setQuantidade(value);\n                        }} value={quantidade} />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            <Divider />\n        </Container>\n        </div >\n    );\n}\nexport default PerfilPedidos;"]},"metadata":{},"sourceType":"module"}