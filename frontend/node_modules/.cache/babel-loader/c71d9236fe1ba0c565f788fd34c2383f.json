{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormHortalica/index.js\";\nimport React from 'react';\nimport { Form, Select, InputNumber, Button, Input } from 'antd';\nimport { notificarErro, notificarSucesso } from '../Notificacao';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../../service/api';\n\nfunction FormHortalica() {\n  const history = useHistory();\n  const categorias = ['Folhas', 'Temperos', 'Legumes', 'Raizes'];\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = async values => {\n    const {\n      nome,\n      categoria,\n      valor\n    } = values;\n\n    try {\n      await api.post('/hortalica', {\n        nome,\n        categoria,\n        valor\n      }, {\n        p: 'teste'\n      });\n    } catch (e) {}\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n  return React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    onValuesChange: onFormLayoutChange,\n    size: \"larger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Nome\",\n    name: \"nome\",\n    rules: [{\n      required: true,\n      message: 'O nome é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Categoria\",\n    name: \"categoria\",\n    rules: [{\n      required: true,\n      message: 'A Categoria é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, categorias.map(cat => {\n    return React.createElement(Select.Option, {\n      value: cat,\n      key: cat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, cat);\n  }))), React.createElement(Form.Item, {\n    label: \"Valor\",\n    name: \"valor\",\n    rules: [{\n      required: true,\n      message: 'O valor é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    defaultValue: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      marginRight: '2px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Salvar\"), React.createElement(Button, {\n    type: \"danger\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Cancelar\")));\n}\n\nexport default FormHortalica;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormHortalica/index.js"],"names":["React","Form","Select","InputNumber","Button","Input","notificarErro","notificarSucesso","useHistory","api","FormHortalica","history","categorias","onFormLayoutChange","size","console","log","onFinish","values","nome","categoria","valor","post","p","e","onFinishFailed","errorInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","remember","required","message","map","cat","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Select, InputNumber, Button,Input} from 'antd';\nimport {notificarErro, notificarSucesso} from '../Notificacao';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../../service/api';\n\nfunction FormHortalica() {\n\n    const history = useHistory();\n\n    const categorias = ['Folhas', 'Temperos', 'Legumes', 'Raizes'];\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = async values => {\n        const {nome, categoria, valor } = values;\n        try{\n            await api.post('/hortalica',{nome,categoria,valor},{p:'teste'}); \n        }catch(e){\n\n        }\n\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n\n\n    return (\n        <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            onValuesChange={onFormLayoutChange}\n            size='larger'>\n            <Form.Item\n                label='Nome'\n                name=\"nome\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'O nome é obrigatorio!'\n                    }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label='Categoria'\n                name=\"categoria\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'A Categoria é obrigatoria!',\n                    }]}\n            >\n                <Select>\n                    {\n                        categorias.map((cat) => {\n                            return (<Select.Option value={cat} key={cat}>{cat}</Select.Option>)\n                        })\n                    }\n                </Select>\n            </Form.Item>\n            <Form.Item\n                label='Valor'\n                name=\"valor\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'O valor é obrigatoria!',\n                    }]}\n            >\n                <InputNumber defaultValue={0} />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ marginRight: '2px' }}>\n                    Salvar\n                        </Button>\n\n                <Button\n                    type=\"danger\"\n                    htmlType=\"submit\"\n                    >\n                    Cancelar\n                        </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormHortalica;\n"]},"metadata":{},"sourceType":"module"}