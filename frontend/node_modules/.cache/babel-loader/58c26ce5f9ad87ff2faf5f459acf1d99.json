{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/TabelaHortalicas/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Input } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport api from '../../../service/api';\nimport { useHistory } from 'react-router-dom';\nimport { notificarSucesso, notificarErro } from '../Notificacao';\nimport { showConfirm } from '../ConfirmAcao';\n\nfunction TabelaHortalicas({\n  getData,\n  acoes\n}) {\n  const [lista, setLista] = useState([]);\n  const [loadingTable, setLoadingTable] = useState(false);\n  const [handleUpdateTable, setHandleUpdateTable] = useState(true);\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    async function carregaHortalicas() {\n      setLoadingTable(true);\n      const data = await getData();\n      setLista(data);\n      setLoadingTable(false);\n    }\n\n    carregaHortalicas();\n  }, [handleUpdateTable]);\n\n  const editarHortalica = key => {\n    history.push({\n      pathname: '/perfilHortalica',\n      search: `?key=${key}`\n    });\n  };\n\n  const excluiHortalica = async ({\n    key\n  }) => {\n    try {\n      await deleteData(key);\n      setHandleUpdateTable(!handleUpdateTable);\n      notificarSucesso('Hortaliça removida com sucesso.');\n    } catch (e) {\n      const {\n        mensagem\n      } = e.response.data;\n      notificarErro(mensagem);\n    }\n  };\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => React.createElement(\"div\", {\n      style: {\n        padding: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: `Buscar ${dataIndex}`,\n      value: selectedKeys[0],\n      onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n      onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n      style: {\n        width: 188,\n        marginBottom: 8,\n        display: 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n      icon: React.createElement(SearchOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      size: \"small\",\n      style: {\n        width: 90,\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Buscar\"), React.createElement(Button, {\n      onClick: () => handleReset(clearFilters),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Resetar\")),\n    filterIcon: filtered => React.createElement(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }),\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {},\n    render: text => searchedColumn === dataIndex ? React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : text\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const columns = [{\n    title: 'Codigo',\n    dataIndex: 'key',\n    key: 'key',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.key - b.key\n  }, {\n    title: 'Nome',\n    dataIndex: 'nome',\n    key: 'nome',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.nome > b.nome ? 1 : b.nome > a.nome ? -1 : 0,\n    ...getColumnSearchProps('nome')\n  }, {\n    title: 'Categoria',\n    dataIndex: 'categoria',\n    key: 'categoria',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.categoria > b.categoria ? 1 : b.categoria > a.categoria ? -1 : 0,\n    filters: [{\n      text: 'Folhas',\n      value: 'Folhas'\n    }, {\n      text: 'Raizes',\n      value: 'Raizes'\n    }, {\n      text: 'Legumes',\n      value: 'Legumes'\n    }],\n    onFilter: (value, record) => record.categoria.indexOf(value) === 0\n  }, {\n    title: 'Classificação',\n    dataIndex: 'classificacao',\n    key: 'classificacao',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.classificacao - b.classificacao\n  }, {\n    title: 'Valor (R$)',\n    dataIndex: 'valor',\n    key: 'valor',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.valor - b.valor\n  }, acoes];\n  return React.createElement(Table, {\n    dataSource: lista,\n    columns: columns,\n    className: \"Tabela\",\n    loading: loadingTable,\n    pagination: {\n      pageSizeOptions: ['5', '10', '20', '40'],\n      showSizeChanger: true,\n      defaultPageSize: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  });\n}\n\nexport default TabelaHortalicas;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/TabelaHortalicas/index.js"],"names":["React","useState","useEffect","Table","Button","Input","Highlighter","SearchOutlined","DeleteOutlined","EditOutlined","api","useHistory","notificarSucesso","notificarErro","showConfirm","TabelaHortalicas","getData","acoes","lista","setLista","loadingTable","setLoadingTable","handleUpdateTable","setHandleUpdateTable","searchText","setSearchText","searchedColumn","setSearchedColumn","history","carregaHortalicas","data","editarHortalica","key","push","pathname","search","excluiHortalica","deleteData","e","mensagem","response","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","render","text","backgroundColor","columns","title","defaultSortOrder","sorter","a","b","nome","categoria","filters","indexOf","classificacao","valor","pageSizeOptions","showSizeChanger","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Button,Input } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined,DeleteOutlined,EditOutlined } from '@ant-design/icons';\nimport api from '../../../service/api';\nimport { useHistory } from 'react-router-dom';\nimport { notificarSucesso, notificarErro } from '../Notificacao';\nimport {showConfirm} from '../ConfirmAcao';\n\nfunction TabelaHortalicas({getData, acoes}) {\n\n    const [lista, setLista] = useState([]);\n    \n    const [loadingTable, setLoadingTable] = useState(false);\n    const [handleUpdateTable, setHandleUpdateTable] = useState(true);\n\n    const [searchText, setSearchText]  = useState('');\n    const [searchedColumn, setSearchedColumn] = useState('');\n\n    const history = useHistory();\n\n\n    useEffect(() => {\n         async function carregaHortalicas() {\n            setLoadingTable(true);\n             const data  = await getData();\n             setLista(data);\n             setLoadingTable(false);\n         }\n         carregaHortalicas();\n    \n    }, [handleUpdateTable]);\n\n    const editarHortalica = (key) => {\n        history.push({\n            pathname:'/perfilHortalica',\n            search:`?key=${key}`\n        })\n    }\n\n    const excluiHortalica = async ({key}) =>{\n        try {\n            await deleteData(key);\n            setHandleUpdateTable(!handleUpdateTable);\n            notificarSucesso('Hortaliça removida com sucesso.')\n        } catch (e) {\n            const {mensagem} = e.response.data;\n            notificarErro(mensagem);\n        }\n    }\n    \n    const getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    placeholder={`Buscar ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Button\n                    type=\"primary\"\n                    onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    icon={<SearchOutlined />}\n                    size=\"small\"\n                    style={{ width: 90, marginRight: 8 }}\n                >\n                    Buscar\n            </Button>\n                <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                    Resetar\n            </Button>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) =>\n            record[dataIndex]\n                .toString()\n                .toLowerCase()\n                .includes(value.toLowerCase()),\n        onFilterDropdownVisibleChange: visible => {\n        },\n        render: text =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text.toString()}\n                />\n            ) : (\n                    text\n                ),\n    });\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex);\n    };\n\n    const handleReset = clearFilters => {\n        clearFilters();\n        setSearchText('');\n    };\n\n    const columns = [\n        {\n            title: 'Codigo',\n            dataIndex: 'key',\n            key: 'key',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.key - b.key,\n\n        },\n        {\n            title: 'Nome',\n            dataIndex: 'nome',\n            key: 'nome',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => ((a.nome > b.nome) ? 1 : ((b.nome > a.nome) ? -1 : 0)),\n            ...getColumnSearchProps('nome'),\n        },\n        {\n            title: 'Categoria',\n            dataIndex: 'categoria',\n            key: 'categoria',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => ((a.categoria > b.categoria) ? 1 : ((b.categoria > a.categoria) ? -1 : 0)),\n            \n            filters: [\n                {\n                    text: 'Folhas',\n                    value: 'Folhas',\n                },\n                {\n                    text: 'Raizes',\n                    value: 'Raizes',\n                },\n                {\n                    text: 'Legumes',\n                    value: 'Legumes',\n                },\n            ],\n            onFilter: (value, record) => record.categoria.indexOf(value) === 0,\n        },\n        {\n            title: 'Classificação',\n            dataIndex: 'classificacao',\n            key: 'classificacao',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.classificacao - b.classificacao,\n\n        },\n        {\n            title: 'Valor (R$)',\n            dataIndex: 'valor',\n            key: 'valor',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.valor - b.valor,\n        },\n        acoes,\n    ];\n\n    return (\n        <Table dataSource={lista} columns={columns} className='Tabela' loading={loadingTable}  pagination= { {pageSizeOptions: ['5','10','20', '40'], showSizeChanger: true, defaultPageSize:5}}/>\n    );\n}\n\nexport default TabelaHortalicas;"]},"metadata":{},"sourceType":"module"}