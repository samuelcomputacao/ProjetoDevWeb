{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { notificarErro } from '../Notificacao/index';\nimport api from '../../../service/api';\nimport { Form, Input, Button, Select, Divider } from 'antd';\nimport Titulo from '../Titulo';\n\nfunction FormUsuario({\n  cadastrar,\n  cancelar,\n  atualizar,\n  usuarioUpdate = -1\n}) {\n  const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n  const [usuario, setUsuario] = useState({});\n  useEffect(() => {\n    async function carregaUsuarios() {\n      if (usuarioUpdate > 0) try {\n        const u = api.get(`/usuario/${usuarioUpdate}`);\n        setUsuario(u);\n      } catch (e) {\n        const {\n          mensagem\n        } = e.response.data;\n        notificarErro(mensagem);\n      }\n    }\n\n    carregaUsuarios();\n  }, []);\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = async values => {\n    const {\n      nome,\n      funcao,\n      cpfCnpj,\n      senha,\n      confirmSenha\n    } = values;\n\n    if (senha !== confirmSenha) {\n      notificarErro('As senhas não são iguais');\n    } else {\n      const usuario = {\n        nome,\n        funcao,\n        cpfCnpj,\n        senha\n      };\n      cadastrar(usuario);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, !atualizar && React.createElement(Titulo, {\n    nome: \"Cadastro de Usu\\xE1rios\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), atualizar && React.createElement(Titulo, {\n    nome: \"Atualizar Usu\\xE1rio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true,\n      nome: usuario.nome,\n      funcao: usuario.funcao,\n      cpfCnpj: usuario.cpfCnpj\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    onValuesChange: onFormLayoutChange,\n    size: \"larger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Nome\",\n    name: \"nome\",\n    rules: [{\n      required: true,\n      message: 'O nome é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Cpf/Cnpj\",\n    name: \"cpfCnpj\",\n    rules: [{\n      required: true,\n      message: 'O CPF/Cnpj é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Fun\\xE7\\xE3o\",\n    name: \"funcao\",\n    rules: [{\n      required: true,\n      message: 'A Função é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, categorias.map(cat => {\n    return React.createElement(Select.Option, {\n      value: cat,\n      key: cat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, cat);\n  }))), React.createElement(Form.Item, {\n    label: \"Senha\",\n    name: \"senha\",\n    rules: [{\n      required: true,\n      message: 'A senha é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Confirma\\xE7\\xE3o\",\n    name: \"confirmSenha\",\n    rules: [{\n      required: true,\n      message: 'A confirmação da senha é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), atualizar && React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Atualizar\"), !atualizar && React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Salvar\"), React.createElement(Button, {\n    type: \"danger\",\n    href: \"/usuarios\",\n    style: {\n      marginLeft: '2px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Cancelar\"))));\n}\n\nexport default FormUsuario;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js"],"names":["React","useState","useEffect","notificarErro","api","Form","Input","Button","Select","Divider","Titulo","FormUsuario","cadastrar","cancelar","atualizar","usuarioUpdate","categorias","setCategorias","usuario","setUsuario","carregaUsuarios","u","get","e","mensagem","response","data","onFormLayoutChange","size","console","log","onFinish","values","nome","funcao","cpfCnpj","senha","confirmSenha","onFinishFailed","errorInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","remember","required","message","map","cat","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { notificarErro } from '../Notificacao/index';\nimport api from '../../../service/api';\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n    Divider\n} from 'antd';\nimport Titulo from '../Titulo';\n\nfunction FormUsuario({ cadastrar, cancelar, atualizar, usuarioUpdate = -1 }) {\n\n    const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n    const [usuario, setUsuario] = useState({});\n\n    useEffect(() => {\n        async function carregaUsuarios() {\n            if (usuarioUpdate > 0)\n                try {\n                    const u = api.get(`/usuario/${usuarioUpdate}`);\n                    setUsuario(u);\n                } catch (e) {\n                    const { mensagem } = e.response.data;\n                    notificarErro(mensagem);\n                }\n\n        }\n        carregaUsuarios();\n    }, []);\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = async (values) => {\n\n        const { nome, funcao, cpfCnpj, senha, confirmSenha } = values;\n\n        if (senha !== confirmSenha) {\n            notificarErro('As senhas não são iguais');\n        } else {\n\n            const usuario = {\n                nome,\n                funcao,\n                cpfCnpj,\n                senha\n            };\n            cadastrar(usuario);\n        }\n    };\n\n\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n\n    return (\n        <div>\n            {!atualizar && <Titulo nome=\"Cadastro de Usuários\" />}\n            {atualizar && <Titulo nome=\"Atualizar Usuário\" />}\n            <Divider />\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                    nome: usuario.nome,\n                    funcao: usuario.funcao,\n                    cpfCnpj: usuario.cpfCnpj\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                onValuesChange={onFormLayoutChange}\n                size='larger'>\n                <Form.Item\n                    label='Nome'\n                    name=\"nome\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O nome é obrigatorio!'\n                        }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label='Cpf/Cnpj'\n                    name=\"cpfCnpj\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O CPF/Cnpj é obrigatorio!'\n                        }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label='Função'\n                    name=\"funcao\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A Função é obrigatoria!',\n                        }]}\n                >\n                    <Select>\n                        {\n                            categorias.map((cat) => {\n                                return (<Select.Option value={cat} key={cat}>{cat}</Select.Option>)\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label='Senha'\n                    name=\"senha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A senha é obrigatoria!'\n                        }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    label='Confirmação'\n                    name=\"confirmSenha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A confirmação da senha é obrigatoria!'\n                        }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    {atualizar &&\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\">\n\n                            Atualizar\n                    </Button>\n                    }\n                    {!atualizar &&\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\">\n                            Salvar\n                    </Button>\n                    }\n                    <Button\n                        type=\"danger\"\n                        href=\"/usuarios\"\n                        style={{ marginLeft: '2px' }}\n                    >\n                        Cancelar\n                        </Button>\n\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport default FormUsuario;"]},"metadata":{},"sourceType":"module"}