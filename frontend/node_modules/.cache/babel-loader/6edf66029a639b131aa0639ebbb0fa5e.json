{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormHortalica/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Select, InputNumber, Button, Input } from 'antd';\nimport { notificarErro, notificarSucesso } from '../Notificacao';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../../service/api';\n\nfunction FormHortalica({\n  location\n}) {\n  const history = useHistory();\n  const categorias = ['Folhas', 'Temperos', 'Legumes', 'Raizes'];\n  const [hortalica, setHortalica] = useState({});\n  const [loadingSalvar, setLoadingSalvar] = useState(false);\n  const [loadingAtualizar, setLoadingAtualizar] = useState(false);\n  const [carregado, setCarregado] = useState(false);\n  useEffect(() => {\n    async function buscarHortalica() {\n      if (location) {\n        const params = new URLSearchParams(location.search);\n        const key = params.get('key');\n\n        try {\n          const {\n            data\n          } = await api.get(`/hortalica/${key}`);\n          await setHortalica(data);\n          await setCarregado(true);\n        } catch (e) {\n          const {\n            mensagem\n          } = e.reponse.data;\n          notificarErro(mensagem);\n        }\n      }\n    }\n\n    buscarHortalica();\n  }, [location]);\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = async values => {\n    setLoadingSalvar(true);\n    const {\n      nome,\n      categoria,\n      valor\n    } = values;\n\n    try {\n      await api.post('/hortalica', {\n        nome,\n        categoria,\n        valor\n      });\n      notificarSucesso('Hortaliça cadastrada.');\n      setLoadingSalvar(false);\n      history.push('/hortalicas');\n    } catch (e) {\n      const {\n        mensagem\n      } = e.reponse.data;\n      notificarErro(mensagem);\n      setLoadingSalvar(false);\n    }\n  };\n\n  const onFinishEdit = async values => {\n    setLoadingAtualizar(true);\n    const {\n      nome,\n      categoria,\n      valor\n    } = values;\n\n    try {\n      await api.post('/hortalica', {\n        nome,\n        categoria,\n        valor\n      });\n      notificarSucesso('Hortaliça cadastrada.');\n      setLoadingAtualizar(false);\n      setTimeout(_ => {\n        history.push('/hortalicas');\n      }, 200);\n    } catch (e) {\n      const {\n        mensagem\n      } = e.reponse.data;\n      notificarErro(mensagem);\n      setLoadingAtualizar(false);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n\n  if (false) {\n    return React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true,\n        nome: 'oi',\n        categoria: 'Folhas',\n        valor: '3'\n      },\n      onFinish: onFinishEdit,\n      onFinishFailed: onFinishFailed,\n      onValuesChange: onFormLayoutChange,\n      size: \"larger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Nome\",\n      name: \"nome\",\n      rules: [{\n        required: true,\n        message: 'O nome é obrigatorio!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Categoria\",\n      name: \"categoria\",\n      rules: [{\n        required: true,\n        message: 'A Categoria é obrigatoria!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, categorias.map(cat => {\n      return React.createElement(Select.Option, {\n        value: cat,\n        key: cat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, cat);\n    }))), React.createElement(Form.Item, {\n      label: \"Valor\",\n      name: \"valor\",\n      rules: [{\n        required: true,\n        message: 'O valor é obrigatoria!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      defaultValue: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: '2px'\n      },\n      loading: loadingAtualizar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Atualizar\"), React.createElement(Button, {\n      type: \"danger\",\n      htmlType: \"submit\",\n      href: \"/hortalicas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Cancelar\")));\n  } else {\n    return React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true,\n        nome: 'olá'\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      onValuesChange: onFormLayoutChange,\n      size: \"larger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Nome\",\n      name: \"nome\",\n      rules: [{\n        required: true,\n        message: 'O nome é obrigatorio!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Categoria\",\n      name: \"categoria\",\n      rules: [{\n        required: true,\n        message: 'A Categoria é obrigatoria!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, categorias.map(cat => {\n      return React.createElement(Select.Option, {\n        value: cat,\n        key: cat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, cat);\n    }))), React.createElement(Form.Item, {\n      label: \"Valor\",\n      name: \"valor\",\n      rules: [{\n        required: true,\n        message: 'O valor é obrigatoria!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      defaultValue: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: '2px'\n      },\n      loading: loadingSalvar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(Button, {\n      type: \"danger\",\n      htmlType: \"submit\",\n      href: \"hortalicas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Cancelar\")));\n  }\n}\n\nexport default FormHortalica;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormHortalica/index.js"],"names":["React","useState","useEffect","Form","Select","InputNumber","Button","Input","notificarErro","notificarSucesso","useHistory","api","FormHortalica","location","history","categorias","hortalica","setHortalica","loadingSalvar","setLoadingSalvar","loadingAtualizar","setLoadingAtualizar","carregado","setCarregado","buscarHortalica","params","URLSearchParams","search","key","get","data","e","mensagem","reponse","onFormLayoutChange","size","console","log","onFinish","values","nome","categoria","valor","post","push","onFinishEdit","setTimeout","_","onFinishFailed","errorInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","remember","required","message","map","cat","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Select, InputNumber, Button, Input } from 'antd';\nimport { notificarErro, notificarSucesso } from '../Notificacao';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../../service/api';\n\nfunction FormHortalica({ location }) {\n\n    const history = useHistory();\n\n    const categorias = ['Folhas', 'Temperos', 'Legumes', 'Raizes'];\n\n    const [hortalica, setHortalica] = useState({});\n\n    const [loadingSalvar, setLoadingSalvar] = useState(false);\n    const [loadingAtualizar, setLoadingAtualizar] = useState(false);\n    const [carregado, setCarregado] = useState(false);\n\n    useEffect(() => {\n        async function buscarHortalica() {\n            if (location) {\n                const params = new URLSearchParams(location.search);\n                const key = params.get('key');\n                try{\n                const { data } = await api.get(`/hortalica/${key}`)\n                await setHortalica(data);\n                await setCarregado(true);\n                }catch(e){\n                    const {mensagem} = e.reponse.data;\n                    notificarErro(mensagem);\n                }\n            }\n        }\n        buscarHortalica();\n    }, [location]);\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = async values => {\n        setLoadingSalvar(true);\n        const { nome, categoria, valor } = values;\n        try {\n            await api.post('/hortalica', { nome, categoria, valor });\n            notificarSucesso('Hortaliça cadastrada.')\n            setLoadingSalvar(false);\n            history.push('/hortalicas');\n        } catch (e) {\n            const { mensagem } = e.reponse.data;\n            notificarErro(mensagem);\n            setLoadingSalvar(false);\n        }\n\n    };\n\n    const onFinishEdit = async values => {\n        setLoadingAtualizar(true);\n        const { nome, categoria, valor } = values;\n        try {\n            await api.post('/hortalica', { nome, categoria, valor });\n            notificarSucesso('Hortaliça cadastrada.')\n            setLoadingAtualizar(false);\n            setTimeout(_ => {\n                history.push('/hortalicas')\n            }, 200);\n\n        } catch (e) {\n            const { mensagem } = e.reponse.data;\n            notificarErro(mensagem);\n            setLoadingAtualizar(false);\n        }\n\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n    if (false) {\n        return (\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                    nome: 'oi',\n                    categoria: 'Folhas',\n                    valor: '3'\n                }}\n                onFinish={onFinishEdit}\n                onFinishFailed={onFinishFailed}\n                onValuesChange={onFormLayoutChange}\n                size='larger'>\n                <Form.Item\n                    label='Nome'\n                    name=\"nome\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O nome é obrigatorio!'\n                        }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label='Categoria'\n                    name='categoria'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A Categoria é obrigatoria!',\n                        }]}\n                >\n                    <Select>\n                        {\n                            categorias.map((cat) => {\n                                return (<Select.Option value={cat} key={cat}>{cat}</Select.Option>)\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    label='Valor'\n                    name='valor'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O valor é obrigatoria!',\n                        }]}\n                >\n                    <InputNumber defaultValue={0} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button\n                        type='primary'\n                        htmlType='submit'\n                        style={{ marginRight: '2px' }}\n                        loading={loadingAtualizar}>\n                        Atualizar\n                </Button>\n                    <Button\n                        type='danger'\n                        htmlType='submit'\n                        href='/hortalicas'\n                    >\n                        Cancelar\n                </Button>\n                </Form.Item>\n            </Form>\n        );\n    } else {\n        return (\n            <Form\n                {...layout}\n                name='basic'\n                initialValues={{\n                    remember: true,\n                    nome:'olá'\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                onValuesChange={onFormLayoutChange}\n                size='larger'>\n                <Form.Item\n                    label='Nome'\n                    name=\"nome\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O nome é obrigatorio!'\n                        }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label='Categoria'\n                    name=\"categoria\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'A Categoria é obrigatoria!',\n                        }]}\n                >\n                    <Select>\n                        {\n                            categorias.map((cat) => {\n                                return (<Select.Option value={cat} key={cat}>{cat}</Select.Option>)\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    label='Valor'\n                    name=\"valor\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'O valor é obrigatoria!',\n                        }]}\n                >\n                    <InputNumber defaultValue={0} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        style={{ marginRight: '2px' }}\n                        loading={loadingSalvar}>\n                        Salvar\n                        </Button>\n\n                    <Button\n                        type='danger'\n                        htmlType='submit'\n                        href='hortalicas'\n                    >\n                        Cancelar\n                        </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default FormHortalica;\n"]},"metadata":{},"sourceType":"module"}