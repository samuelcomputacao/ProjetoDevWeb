{"ast":null,"code":"import api from './api';\nconst TOKEN = 'token';\nconst AVATAR = 'avatar';\nconst USUARIO_KEY = 'key_usuario';\nconst USUARIO_TIPO = 'tipo_usuario';\n\nconst getKeyUsuarioLogado = () => {\n  return 3;\n};\n\nconst isFuncionarioLogado = () => {\n  return true;\n};\n\nconst isClienteLogado = () => {\n  return true;\n};\n\nconst getToken = async () => {\n  const token = sessionStorage.getItem(TOKEN);\n  return token;\n};\n\nconst getAvatar = async () => {\n  const avatar = await sessionStorage.getItem(AVATAR);\n  return avatar;\n};\n\nconst setToken = async token => {\n  const {\n    data\n  } = await api.get('/usuarioToken/', {\n    params: {\n      Authentication: token\n    }\n  });\n  sessionStorage.setItem(TOKEN, token);\n  sessionStorage.setItem(AVATAR, data.avatar);\n  sessionStorage.setItem(USUARIO_KEY, data.key);\n  sessionStorage.setItem(USUARIO_TIPO, data.tipo);\n  window.location.reload();\n};\n\nconst getUsuarioKey = async () => {\n  const key = await sessionStorage.getItem(USUARIO_KEY);\n  return key;\n};\n\nconst getUsuarioTipo = async () => {\n  const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n  return tipo;\n};\n\nconst sair = () => {\n  sessionStorage.clear();\n};\n\nexport { getKeyUsuarioLogado, isFuncionarioLogado, isClienteLogado, getToken, sair, setToken, getAvatar, getUsuarioTipo, getUsuarioKey };","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/service/usuario.js"],"names":["api","TOKEN","AVATAR","USUARIO_KEY","USUARIO_TIPO","getKeyUsuarioLogado","isFuncionarioLogado","isClienteLogado","getToken","token","sessionStorage","getItem","getAvatar","avatar","setToken","data","get","params","Authentication","setItem","key","tipo","window","location","reload","getUsuarioKey","getUsuarioTipo","sair","clear"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,YAAY,GAAG,cAArB;;AAEA,MAAMC,mBAAmB,GAAG,MAAK;AAC7B,SAAO,CAAP;AACH,CAFD;;AAIA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,SAAO,IAAP;AACH,CAFD;;AAIA,MAAMC,eAAe,GAAG,MAAM;AAC1B,SAAO,IAAP;AACH,CAFD;;AAIA,MAAMC,QAAQ,GAAG,YAAY;AACzB,QAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuBV,KAAvB,CAAd;AACA,SAAOQ,KAAP;AACH,CAHD;;AAKA,MAAMG,SAAS,GAAG,YAAY;AAC1B,QAAMC,MAAM,GAAG,MAAMH,cAAc,CAACC,OAAf,CAAuBT,MAAvB,CAArB;AACA,SAAOW,MAAP;AACH,CAHD;;AAKA,MAAMC,QAAQ,GAAG,MAAOL,KAAP,IAAiB;AAC9B,QAAM;AAACM,IAAAA;AAAD,MAAQ,MAAMf,GAAG,CAACgB,GAAJ,CAAQ,gBAAR,EAA0B;AAACC,IAAAA,MAAM,EAAC;AAClDC,MAAAA,cAAc,EAACT;AADmC;AAAR,GAA1B,CAApB;AAGAC,EAAAA,cAAc,CAACS,OAAf,CAAuBlB,KAAvB,EAA6BQ,KAA7B;AACAC,EAAAA,cAAc,CAACS,OAAf,CAAuBjB,MAAvB,EAA8Ba,IAAI,CAACF,MAAnC;AACAH,EAAAA,cAAc,CAACS,OAAf,CAAuBhB,WAAvB,EAAmCY,IAAI,CAACK,GAAxC;AACAV,EAAAA,cAAc,CAACS,OAAf,CAAuBf,YAAvB,EAAqCW,IAAI,CAACM,IAA1C;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,CATD;;AAWA,MAAMC,aAAa,GAAG,YAAY;AAC9B,QAAML,GAAG,GAAG,MAAMV,cAAc,CAACC,OAAf,CAAuBR,WAAvB,CAAlB;AACA,SAAOiB,GAAP;AACH,CAHD;;AAKA,MAAMM,cAAc,GAAG,YAAY;AAC/B,QAAML,IAAI,GAAG,MAAMX,cAAc,CAACC,OAAf,CAAuBP,YAAvB,CAAnB;AACA,SAAOiB,IAAP;AACH,CAHD;;AAKA,MAAMM,IAAI,GAAG,MAAM;AACfjB,EAAAA,cAAc,CAACkB,KAAf;AACH,CAFD;;AAIA,SAAQvB,mBAAR,EAA4BC,mBAA5B,EAAgDC,eAAhD,EAAgEC,QAAhE,EAAyEmB,IAAzE,EAA8Eb,QAA9E,EAAwFF,SAAxF,EAAkGc,cAAlG,EAAiHD,aAAjH","sourcesContent":["import api from './api';\n\nconst TOKEN = 'token';\nconst AVATAR = 'avatar';\nconst USUARIO_KEY = 'key_usuario';\nconst USUARIO_TIPO = 'tipo_usuario';\n\nconst getKeyUsuarioLogado = () =>{\n    return 3;\n}\n\nconst isFuncionarioLogado = () => {\n    return true;\n}\n\nconst isClienteLogado = () => {\n    return true;\n}\n\nconst getToken = async () => {\n    const token = sessionStorage.getItem(TOKEN);\n    return token;\n}\n\nconst getAvatar = async () => {\n    const avatar = await sessionStorage.getItem(AVATAR);\n    return avatar;\n}\n\nconst setToken = async (token) => {\n    const {data}= await api.get('/usuarioToken/', {params:{\n        Authentication:token\n    }});\n    sessionStorage.setItem(TOKEN,token);\n    sessionStorage.setItem(AVATAR,data.avatar);\n    sessionStorage.setItem(USUARIO_KEY,data.key);\n    sessionStorage.setItem(USUARIO_TIPO, data.tipo);\n    window.location.reload();\n}\n\nconst getUsuarioKey = async () => {\n    const key = await sessionStorage.getItem(USUARIO_KEY);\n    return key;\n}\n\nconst getUsuarioTipo = async () => {\n    const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n    return tipo;\n}\n\nconst sair = () => {\n    sessionStorage.clear()\n}\n\nexport {getKeyUsuarioLogado,isFuncionarioLogado,isClienteLogado,getToken,sair,setToken, getAvatar,getUsuarioTipo,getUsuarioKey};"]},"metadata":{},"sourceType":"module"}