{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Hortalicas/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarSucesso, notificarErro } from '../../components/Notificacao';\nimport { useHistory } from 'react-router-dom';\nimport { DeleteOutlined, EditOutlined, SmileOutlined } from '@ant-design/icons';\nimport { isClienteLogado } from '../../../service/usuario';\nimport api from '../../../service/api';\nimport { Divider, Button } from 'antd';\nconst {\n  Item\n} = Breadcrumb;\n\nfunction Hortalicas() {\n  const [clienteLogado, setClienteLogado] = useState(false);\n  const [funcionarioLogado, setFuncionarioLogado] = useState(false);\n  const [keyHortalica, setKeyHortalica] = useState('');\n  useEffect(() => {\n    const verificarUsuarioLogado = async () => {\n      const clienteLogado = await isClienteLogado();\n      setClienteLogado(clienteLogado);\n      setFuncionarioLogado(!clienteLogado);\n    };\n\n    verificarUsuarioLogado();\n  }, []);\n  const history = useHistory();\n  const [handleUpdateTable, setHandleUpdateTable] = useState(false);\n\n  const carregaHortalicas = async () => {\n    const {\n      data\n    } = await api.get('/hortalica');\n    return data;\n  };\n\n  const excluiHortalica = async ({\n    key\n  }) => {\n    try {\n      await api.delete(`/hortalica/${key}`);\n      notificarSucesso('Hortaliça removida com sucesso.');\n      setHandleUpdateTable(!handleUpdateTable);\n    } catch (e) {\n      const {\n        mensagem\n      } = e.response.data;\n      notificarErro(mensagem);\n    }\n  };\n\n  const editarHortalica = key => {\n    history.push({\n      pathname: '/perfilHortalica',\n      search: `?key=${key}`\n    });\n  };\n\n  const acoes = {\n    title: 'Ações',\n    dataIndex: 'acoes',\n    key: 'acoes',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, funcionarioLogado && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: 'Editar hortaliça',\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 35\n        }\n      }),\n      onClick: _ => {\n        editarHortalica(record.key);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Excluir hortaliça',\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      danger: true,\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 35\n        }\n      }),\n      onClick: _ => {\n        const title = 'Deseja excluir a hortaliça?';\n        const content = `Ao clicar em OK você excluirá a hortaliça de código ${record.key}`;\n        const params = {\n          key: record.key\n        };\n        showConfirm(title, content, excluiHortalica, params);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    })), clienteLogado && /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      title: 'Avaliar Hortaliça',\n      icon: /*#__PURE__*/React.createElement(SmileOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 31\n        }\n      }),\n      onClick: _ => {\n        setKeyHortalica(record.key);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }))\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Principal\"), /*#__PURE__*/React.createElement(Item, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Hortali\\xE7as\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Titulo, {\n    nome: \"Hortali\\xE7as\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TabelaHortalicas, {\n    getData: carregaHortalicas,\n    acoes: acoes,\n    handleUpdateTable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), funcionarioLogado && /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    href: \"/perfilHortalica\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Cadastrar\")));\n}\n\nexport default Hortalicas;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Hortalicas/index.js"],"names":["React","useState","useEffect","Breadcrumb","Container","Titulo","TabelaHortalicas","showConfirm","notificarSucesso","notificarErro","useHistory","DeleteOutlined","EditOutlined","SmileOutlined","isClienteLogado","api","Divider","Button","Item","Hortalicas","clienteLogado","setClienteLogado","funcionarioLogado","setFuncionarioLogado","keyHortalica","setKeyHortalica","verificarUsuarioLogado","history","handleUpdateTable","setHandleUpdateTable","carregaHortalicas","data","get","excluiHortalica","key","delete","e","mensagem","response","editarHortalica","push","pathname","search","acoes","title","dataIndex","render","_","record","marginLeft","content","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarSucesso, notificarErro } from '../../components/Notificacao';\nimport { useHistory } from 'react-router-dom';\nimport { DeleteOutlined, EditOutlined, SmileOutlined } from '@ant-design/icons';\nimport {isClienteLogado } from '../../../service/usuario';\nimport api from '../../../service/api';\n\nimport { Divider, Button } from 'antd';\nconst { Item } = Breadcrumb;\n\nfunction Hortalicas() {\n\n    const [clienteLogado, setClienteLogado] = useState(false);\n    const [funcionarioLogado, setFuncionarioLogado] = useState(false);\n\n    const [keyHortalica, setKeyHortalica] = useState('');\n\n    useEffect(() => {\n        const verificarUsuarioLogado = async () => {\n            const clienteLogado = await isClienteLogado();\n            setClienteLogado(clienteLogado);\n            setFuncionarioLogado(!clienteLogado);\n        }\n        verificarUsuarioLogado();\n    }, []);\n\n    const history = useHistory();\n\n    const [handleUpdateTable, setHandleUpdateTable] = useState(false);\n\n    const carregaHortalicas = async () => {\n        const { data } = await api.get('/hortalica');\n        return data;\n    }\n\n\n    const excluiHortalica = async ({ key }) => {\n        try {\n            await api.delete(`/hortalica/${key}`);\n            notificarSucesso('Hortaliça removida com sucesso.')\n            setHandleUpdateTable(!handleUpdateTable);\n        } catch (e) {\n            const { mensagem } = e.response.data;\n            notificarErro(mensagem);\n        }\n    }\n\n    const editarHortalica = (key) => {\n        history.push({\n            pathname: '/perfilHortalica',\n            search: `?key=${key}`\n        })\n    }\n\n    const acoes = {\n        title: 'Ações',\n        dataIndex: 'acoes',\n        key: 'acoes',\n        render: (_, record) => (\n            <span>\n                {funcionarioLogado &&\n                    <div>\n                        <Button\n                            title={'Editar hortaliça'}\n                            type='primary'\n                            style={{ marginLeft: '2px' }}\n                            icon={<EditOutlined />}\n                            onClick={_ => {\n                                editarHortalica(record.key);\n                            }}\n                        />\n\n                        <Button\n                            title={'Excluir hortaliça'}\n                            type='primary'\n                            style={{ marginLeft: '2px' }}\n                            danger\n                            icon={<DeleteOutlined />}\n                            onClick={_ => {\n                                const title = 'Deseja excluir a hortaliça?'\n                                const content = `Ao clicar em OK você excluirá a hortaliça de código ${record.key}`;\n                                const params = { key: record.key };\n                                showConfirm(title, content, excluiHortalica, params);\n                            }\n                            }\n                        />\n                    </div>\n                }\n                {clienteLogado &&\n                    <Button\n                        type='primary'\n                        style={{ marginLeft: '2px' }}\n                        title={'Avaliar Hortaliça'}\n                        icon={<SmileOutlined />}\n                        onClick={_ => {\n                            setKeyHortalica(record.key);\n                            \n                        }}\n                    />\n                }\n            </span>\n        )\n    }\n\n    return (\n        <div>\n            <Breadcrumb>\n                <Item href=\"/\">Principal</Item>\n                <Item active>Hortaliças</Item>\n            </Breadcrumb>\n            <Container>\n                <Titulo nome='Hortaliças' />\n                <Divider />\n                <TabelaHortalicas getData={carregaHortalicas} acoes={acoes} handleUpdateTable />\n                <Divider />\n                {funcionarioLogado &&\n                    <Button type='primary' href='/perfilHortalica'>Cadastrar</Button>\n                }\n            </Container>\n        </div>\n    );\n}\n\nexport default Hortalicas;"]},"metadata":{},"sourceType":"module"}