{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/TabelaHortalicas/index.js\";\nimport React, { useState } from 'react';\nimport { Table, Button, Input } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport api from '../../../service/api';\n\nfunction TabelaHortalicas() {\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const acoes = {\n    title: 'Ações',\n    dataIndex: 'acoes',\n    key: 'acoes',\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(EditOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        alert(record);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      danger: true,\n      icon: React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        alert(record);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))\n  };\n  const dataSource = [{\n    id: '1',\n    nome: 'Alface',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: 3\n  }, {\n    id: '2',\n    nome: 'Coentro',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: 2\n  }, {\n    id: '3',\n    nome: 'Cebola',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: 5\n  }];\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => React.createElement(\"div\", {\n      style: {\n        padding: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: `Buscar ${dataIndex}`,\n      value: selectedKeys[0],\n      onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n      onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n      style: {\n        width: 188,\n        marginBottom: 8,\n        display: 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n      icon: React.createElement(SearchOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      size: \"small\",\n      style: {\n        width: 90,\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Buscar\"), React.createElement(Button, {\n      onClick: () => handleReset(clearFilters),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Resetar\")),\n    filterIcon: filtered => React.createElement(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }),\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {},\n    render: text => searchedColumn === dataIndex ? React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : text\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const columns = [{\n    title: 'Codigo',\n    dataIndex: 'id',\n    key: 'id',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.key - b.key\n  }, {\n    title: 'Nome',\n    dataIndex: 'nome',\n    key: 'nome',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.nome > b.nome ? 1 : b.nome > a.nome ? -1 : 0,\n    ...getColumnSearchProps('nome')\n  }, {\n    title: 'Categoria',\n    dataIndex: 'categoria',\n    key: 'categoria',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.categoria > b.categoria ? 1 : b.categoria > a.categoria ? -1 : 0,\n    filters: [{\n      text: 'Folhas',\n      value: 'Folhas'\n    }, {\n      text: 'Raizes',\n      value: 'Raizes'\n    }, {\n      text: 'Legumes',\n      value: 'Legumes'\n    }],\n    onFilter: (value, record) => record.categoria.indexOf(value) === 0\n  }, {\n    title: 'Classificação',\n    dataIndex: 'classificacao',\n    key: 'classificacao',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.classificacao - b.classificacao\n  }, {\n    title: 'Valor (R$)',\n    dataIndex: 'valor',\n    key: 'valor',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.valor - b.valor\n  }, acoes];\n  return React.createElement(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    className: \"Tabela\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  });\n}\n\nexport default TabelaHortalicas;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/TabelaHortalicas/index.js"],"names":["React","useState","Table","Button","Input","Highlighter","SearchOutlined","api","TabelaHortalicas","searchText","setSearchText","searchedColumn","setSearchedColumn","acoes","title","dataIndex","key","render","text","record","marginLeft","_","alert","dataSource","id","nome","categoria","classificacao","valor","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","backgroundColor","columns","defaultSortOrder","sorter","a","b","filters","indexOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Table, Button,Input } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport api from '../../../service/api';\n\nfunction TabelaHortalicas() {\n\n    const [searchText, setSearchText]  = useState('');\n    const [searchedColumn, setSearchedColumn] = useState('');\n\n\n    const acoes = {\n        title: 'Ações',\n        dataIndex: 'acoes',\n        key: 'acoes',\n        render: (text, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<EditOutlined />}\n                    onClick={_ => {\n                        alert(record)\n                    }}\n                />\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    danger\n                    icon={<DeleteOutlined />}\n                    onClick={_ => {\n                        alert(record)\n                    }}\n                />\n            </span>\n        )\n    }\n\n    const dataSource = [\n        {\n            id: '1',\n            nome: 'Alface',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: 3\n        },\n        {\n            id: '2',\n            nome: 'Coentro',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: 2,\n        },\n        {\n            id: '3',\n            nome: 'Cebola',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: 5,\n            \n        },\n    ];\n    \n    const getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    placeholder={`Buscar ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Button\n                    type=\"primary\"\n                    onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    icon={<SearchOutlined />}\n                    size=\"small\"\n                    style={{ width: 90, marginRight: 8 }}\n                >\n                    Buscar\n            </Button>\n                <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                    Resetar\n            </Button>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) =>\n            record[dataIndex]\n                .toString()\n                .toLowerCase()\n                .includes(value.toLowerCase()),\n        onFilterDropdownVisibleChange: visible => {\n        },\n        render: text =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text.toString()}\n                />\n            ) : (\n                    text\n                ),\n    });\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex);\n    };\n\n    const handleReset = clearFilters => {\n        clearFilters();\n        setSearchText('');\n    };\n\n    const columns = [\n        {\n            title: 'Codigo',\n            dataIndex: 'id',\n            key: 'id',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.key - b.key,\n\n        },\n        {\n            title: 'Nome',\n            dataIndex: 'nome',\n            key: 'nome',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => ((a.nome > b.nome) ? 1 : ((b.nome > a.nome) ? -1 : 0)),\n            ...getColumnSearchProps('nome'),\n        },\n        {\n            title: 'Categoria',\n            dataIndex: 'categoria',\n            key: 'categoria',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => ((a.categoria > b.categoria) ? 1 : ((b.categoria > a.categoria) ? -1 : 0)),\n            \n            filters: [\n                {\n                    text: 'Folhas',\n                    value: 'Folhas',\n                },\n                {\n                    text: 'Raizes',\n                    value: 'Raizes',\n                },\n                {\n                    text: 'Legumes',\n                    value: 'Legumes',\n                },\n            ],\n            onFilter: (value, record) => record.categoria.indexOf(value) === 0,\n        },\n        {\n            title: 'Classificação',\n            dataIndex: 'classificacao',\n            key: 'classificacao',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.classificacao - b.classificacao,\n\n        },\n        {\n            title: 'Valor (R$)',\n            dataIndex: 'valor',\n            key: 'valor',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.valor - b.valor,\n        },\n        acoes,\n    ];\n\n    return (\n        <Table dataSource={dataSource} columns={columns} className='Tabela' />\n    );\n}\n\nexport default TabelaHortalicas;"]},"metadata":{},"sourceType":"module"}