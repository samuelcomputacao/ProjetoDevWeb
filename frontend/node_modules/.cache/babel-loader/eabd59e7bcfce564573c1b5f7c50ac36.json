{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/resetPassorwod.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Container } from 'react-bootstrap';\nimport { Form, Input, Button, Divider } from 'antd';\nimport Titulo from './protected/components/Titulo';\nimport api from '../src/service/api';\nimport { notificarErro, notificarSucesso } from '../src/protected/components/Notificacao';\nimport { useHistory } from 'react-router-dom';\nconst layout = {\n  labelCol: {\n    span: 5\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 5,\n    span: 16\n  }\n};\n\nconst ResetPassword = () => {\n  const history = useHistory();\n\n  const onFinish = async values => {\n    try {\n      const {\n        cpfCnpj,\n        senha,\n        confirmSenha\n      } = values;\n\n      if (senha === confirmSenha) {\n        await api.post('/resetPassword', {\n          cpfCnpj,\n          senha\n        });\n        notificarSucesso('Senha alterada com sucesso!');\n        history.push('/');\n      } else {\n        notificarErro('As senhas não são iguais.');\n      }\n    } catch (e) {\n      notificarErro(e.response.data.mensagem);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Titulo, {\n    nome: \"Nova Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"Container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Cpf/Cnpj\",\n    name: \"cpfCnpj\",\n    rules: [{\n      required: true,\n      message: 'O CpfCnpj é obrigatório!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Senha\",\n    name: \"senha\",\n    rules: [{\n      required: true,\n      message: 'A senha é obrigatória!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Confime a Senha\",\n    name: \"confirmSenha\",\n    rules: [{\n      required: true,\n      message: 'A confirmação da senha é obrigatória!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      margin: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Mudar senha\")))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/resetPassorwod.js"],"names":["React","Container","Form","Input","Button","Divider","Titulo","api","notificarErro","notificarSucesso","useHistory","layout","labelCol","span","wrapperCol","tailLayout","offset","ResetPassword","history","onFinish","values","cpfCnpj","senha","confirmSenha","post","push","e","response","data","mensagem","onFinishFailed","errorInfo","console","log","remember","required","message","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Container } from 'react-bootstrap';\nimport { Form, Input, Button, Divider } from 'antd';\nimport Titulo from './protected/components/Titulo';\nimport api from '../src/service/api';\nimport {notificarErro, notificarSucesso} from '../src/protected/components/Notificacao';\nimport {useHistory} from 'react-router-dom';\n\nconst layout = {\n    labelCol: {\n        span: 5,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 5,\n        span: 16,\n    },\n};\nconst ResetPassword = () => {\n    const history = useHistory();\n    const onFinish = async values => {\n        try{\n            const {cpfCnpj,senha,confirmSenha} = values;\n            if(senha===confirmSenha){\n                await api.post('/resetPassword',{cpfCnpj,senha});\n                notificarSucesso('Senha alterada com sucesso!');\n                history.push('/');\n            }else{\n                notificarErro('As senhas não são iguais.');\n            }\n        }catch(e){\n            notificarErro(e.response.data.mensagem);\n        }\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div>\n            <Titulo nome=\"Nova Senha\" />\n            <Divider />\n            <Container className='Container'>\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        label=\"Cpf/Cnpj\"\n                        name=\"cpfCnpj\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'O CpfCnpj é obrigatório!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Senha\"\n                        name=\"senha\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'A senha é obrigatória!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Confime a Senha\"\n                        name=\"confirmSenha\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'A confirmação da senha é obrigatória!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                \n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{margin:'2px'}}>\n                            Mudar senha\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Container>\n        </div>\n    );\n};\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}