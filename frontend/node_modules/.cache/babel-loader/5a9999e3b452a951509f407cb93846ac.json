{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/src/protected/pages/Hortalicas/cadastro.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Radio, Select, Cascader, DatePicker, InputNumber, TreeSelect, Switch, Divider } from 'antd';\nimport Menu from '../../components/Menu';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nconst {\n  Item\n} = Breadcrumb;\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nfunction Cadastro() {\n  const [categorias, setCategorias] = useState(['Folhas', 'Temperos', 'Legumes', 'Raizes']);\n  const [nome, setNome] = useState('');\n  const [categoria, setCategoria] = useState('');\n  const [valor, setValor] = useState(0);\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = values => {\n    setNome(values.nome);\n    setCategoria(values.categoria);\n    setValor(values.valor);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Item, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Principal\"), React.createElement(Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Hortali\\xE7as\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Titulo, {\n    name: \"Cadastro de Hortali\\xE7as\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    onValuesChange: onFormLayoutChange,\n    size: \"larger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Nome\",\n    name: \"nome\",\n    rules: [{\n      required: true,\n      message: 'O nome é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Categoria\",\n    name: \"categoria\",\n    rules: [{\n      required: true,\n      message: 'A Categoria é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Select, {\n    defaultValue: categorias[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, categorias.map(cat => {\n    return React.createElement(Select.Option, {\n      value: cat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, cat);\n  }))), React.createElement(Form.Item, {\n    label: \"Valor\",\n    name: \"valor\",\n    rules: [{\n      required: true,\n      message: 'O valor é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    defaultValue: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Salvar\")))));\n}\n\nexport default Cadastro;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/src/protected/pages/Hortalicas/cadastro.js"],"names":["React","useState","Form","Input","Button","Radio","Select","Cascader","DatePicker","InputNumber","TreeSelect","Switch","Divider","Menu","Breadcrumb","Container","Titulo","Item","Option","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","Cadastro","categorias","setCategorias","nome","setNome","categoria","setCategoria","valor","setValor","onFormLayoutChange","size","onFinish","values","onFinishFailed","errorInfo","layout","tailLayout","offset","remember","required","message","map","cat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Form,\n    Input,\n    Button,\n    Radio,\n    Select,\n    Cascader,\n    DatePicker,\n    InputNumber,\n    TreeSelect,\n    Switch,\n    Divider\n} from 'antd';\n\nimport Menu from '../../components/Menu';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nconst { Item } = Breadcrumb;\n\nconst { Option } = Select;\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst normFile = e => {\n    console.log('Upload event:', e);\n\n    if (Array.isArray(e)) {\n        return e;\n    }\n\n    return e && e.fileList;\n};\n\n\nfunction Cadastro() {\n  \n    const [categorias, setCategorias] = useState(['Folhas', 'Temperos', 'Legumes', 'Raizes']);\n    const [nome, setNome]  = useState('');\n    const [categoria, setCategoria] = useState('');\n    const [valor, setValor]  = useState(0);\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = values => {\n       setNome(values.nome);\n       setCategoria(values.categoria);\n       setValor(values.valor);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n\n    return (\n        <div>\n            <Menu />\n            <Breadcrumb>\n                <Item href=\"/\">Principal</Item>\n                <Item active>Hortaliças</Item>\n            </Breadcrumb>\n            <Container>\n                <Titulo name='Cadastro de Hortaliças' />\n                <Divider />\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    onValuesChange={onFormLayoutChange}\n                    size='larger'>\n                    <Form.Item\n                        label='Nome'\n                        name=\"nome\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'O nome é obrigatorio!'\n                            }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label='Categoria'\n                        name=\"categoria\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'A Categoria é obrigatoria!',\n                            }]}\n                    >\n                        <Select defaultValue={categorias[0]}>\n                            {\n                                categorias.map((cat) => {\n                                    return (<Select.Option value={cat}>{cat}</Select.Option>)\n                                })\n                            }\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label='Valor'\n                        name=\"valor\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'O valor é obrigatoria!',\n                            }]}\n                    >\n                        <InputNumber defaultValue={0} />\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Salvar\n                        </Button>\n                    </Form.Item>\n\n                </Form>\n            </Container>\n        </div>\n    );\n}\n\nexport default Cadastro;"]},"metadata":{},"sourceType":"module"}