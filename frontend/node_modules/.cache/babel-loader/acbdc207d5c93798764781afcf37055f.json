{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/TabelaUsuarios/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Input } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport api from '../../../service/api';\n\nfunction TabelaUsuarios({\n  acoes\n}) {\n  useEffect(() => {\n    carregaUsuarios();\n  }, []);\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const [lista, setLista] = useState([]);\n\n  const carregaUsuarios = async () => {\n    console.log('AQUIIIIIIIIIIIIIIIIIIIII');\n    const {\n      data\n    } = await api.get('/usuario');\n    console.log(data);\n    data.map(u => {\n      setLista([...lista, u]);\n    });\n    console.log(lista);\n  };\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => React.createElement(\"div\", {\n      style: {\n        padding: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: `Buscar ${dataIndex}`,\n      value: selectedKeys[0],\n      onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n      onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n      style: {\n        width: 188,\n        marginBottom: 8,\n        display: 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n      icon: React.createElement(SearchOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      size: \"small\",\n      style: {\n        width: 90,\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Buscar\"), React.createElement(Button, {\n      onClick: () => handleReset(clearFilters),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Resetar\")),\n    filterIcon: filtered => React.createElement(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {},\n    render: text => searchedColumn === dataIndex ? React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : text\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const columns = [{\n    title: 'Código',\n    dataIndex: 'key',\n    key: 'key',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.id - b.id\n  }, {\n    title: 'Nome',\n    dataIndex: 'nome',\n    key: 'nome',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.nome > b.nome ? 1 : b.nome > a.nome ? -1 : 0,\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.nome > b.nome ? 1 : b.nome > a.nome ? -1 : 0,\n    ...getColumnSearchProps('nome')\n  }, {\n    title: 'CpfCnpj',\n    dataIndex: 'cpfCnpj',\n    key: 'cpfCnpj',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.cpfCnpj > b.cpfCnpj ? 1 : b.cpfCnpj > a.cpfCnpj ? -1 : 0\n  }, {\n    title: 'Função',\n    dataIndex: 'funcao',\n    filters: [{\n      text: 'Funcionario',\n      value: 'Funcionario'\n    }, {\n      text: 'Cliente',\n      value: 'Cliente'\n    }],\n    onFilter: (value, record) => record.funcao.indexOf(value) === 0\n  }, acoes];\n  return React.createElement(Table, {\n    dataSource: lista,\n    columns: columns,\n    className: \"Tabela\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  });\n}\n\nexport default TabelaUsuarios;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/TabelaUsuarios/index.js"],"names":["React","useState","useEffect","Table","Button","Input","Highlighter","SearchOutlined","api","TabelaUsuarios","acoes","carregaUsuarios","searchText","setSearchText","searchedColumn","setSearchedColumn","lista","setLista","console","log","data","get","map","u","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","render","text","backgroundColor","columns","title","key","defaultSortOrder","sorter","a","b","id","nome","cpfCnpj","filters","funcao","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Button,Input } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport api from '../../../service/api';\n\nfunction TabelaUsuarios({acoes}) {\n\n    useEffect(()=>{carregaUsuarios()},[]);\n\n    const [searchText, setSearchText]  = useState('');\n    const [searchedColumn, setSearchedColumn] = useState('');\n    const [lista, setLista] = useState([]);\n\n    const carregaUsuarios = async() => {\n        console.log('AQUIIIIIIIIIIIIIIIIIIIII');\n        const {data} = await api.get('/usuario');\n        console.log(data);\n        data.map((u)=>{\n           setLista([...lista,u]);\n        });\n        console.log(lista);\n    }\n    \n\n    const getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    placeholder={`Buscar ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Button\n                    type=\"primary\"\n                    onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    icon={<SearchOutlined />}\n                    size=\"small\"\n                    style={{ width: 90, marginRight: 8 }}\n                >\n                    Buscar\n            </Button>\n                <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                    Resetar\n            </Button>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) =>\n            record[dataIndex]\n                .toString()\n                .toLowerCase()\n                .includes(value.toLowerCase()),\n        onFilterDropdownVisibleChange: visible => {\n        },\n        render: text =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text.toString()}\n                />\n            ) : (\n                    text\n                ),\n    });\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex);\n    };\n\n    const handleReset = clearFilters => {\n        clearFilters();\n        setSearchText('');\n    };\n\n    const columns = [\n        {\n            title: 'Código',\n            dataIndex: 'key',\n            key: 'key',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.id - b.id,\n        },\n        {\n            title: 'Nome',\n            dataIndex: 'nome',\n            key: 'nome',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => ((a.nome > b.nome) ? 1 : ((b.nome > a.nome) ? -1 : 0)),\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => ((a.nome > b.nome) ? 1 : ((b.nome > a.nome) ? -1 : 0)),\n            ...getColumnSearchProps('nome')\n        },\n        {\n            title: 'CpfCnpj',\n            dataIndex: 'cpfCnpj',\n            key:'cpfCnpj',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => ((a.cpfCnpj > b.cpfCnpj) ? 1 : ((b.cpfCnpj > a.cpfCnpj) ? -1 : 0)),\n        },\n\n        {\n            title: 'Função',\n            dataIndex: 'funcao',\n            filters: [\n                {\n                    text: 'Funcionario',\n                    value: 'Funcionario',\n                },\n                {\n                    text: 'Cliente',\n                    value: 'Cliente',\n                },\n            ],\n            onFilter: (value, record) => record.funcao.indexOf(value) === 0,\n        },\n        acoes,\n    ];\n\n    return (  \n        <Table dataSource={lista} columns={columns} className='Tabela' />   \n    );\n}\n\nexport default TabelaUsuarios;"]},"metadata":{},"sourceType":"module"}