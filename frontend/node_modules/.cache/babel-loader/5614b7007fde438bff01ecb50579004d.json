{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/perfil.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Form, Input, Button, Divider, notification, Modal, InputNumber, DatePicker } from 'antd';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nimport api from '../../../service/api';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarErro, notificarSucesso } from '../../components/Notificacao';\nimport { getKeyUsuarioLogado } from '../../../service/usuario';\nimport { useHistory } from 'react-router-dom';\nconst {\n  Item\n} = Breadcrumb;\n\nfunction PerfilPedidos({\n  location\n}) {\n  const [data, setData] = useState('');\n  const [quantidade, setQuantidade] = useState(1);\n  const [pedido, setPedido] = useState([]);\n  const [dateString, setDateString] = useState('');\n  const [hortalica, setHortalica] = useState({});\n  const [valorTotal, setValorTotal] = useState(0);\n  const historico = useHistory();\n  const loading = false;\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n  const [cadastro, setCadastro] = useState(false);\n  const [keyPedido, setKeyPedido] = useState('');\n  const [pedidoVisualizacao, setPedidoVisualizacao] = useState({});\n  useEffect(() => {\n    async function verificaParams() {\n      const params = new URLSearchParams(location.search);\n      const tipo = params.get('cadastro');\n      const key = params.get('key');\n      setCadastro(true);\n\n      if (tipo === '0') {\n        setKeyPedido(key);\n        setCadastro(false);\n        const {\n          data\n        } = await api.get(`/pedido/${key}`);\n        setPedidoVisualizacao(data);\n        console.log(data);\n      }\n    }\n\n    verificaParams();\n  }, [location]);\n  const acoes = {\n    title: 'Inserir',\n    dataIndex: 'inserir',\n    key: 'inserir',\n    render: (_, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(ArrowRightOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        setHortalica(record);\n        showModal();\n      },\n      title: \"Inserir\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))\n  };\n\n  const openNotification = (msg, descricao) => {\n    notification.open({\n      message: `${msg}`,\n      description: `${descricao}`\n    });\n  };\n\n  const acoesPedido = {\n    title: 'Remover',\n    dataIndex: 'remover',\n    key: 'remover',\n    render: (_, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }),\n      danger: true,\n      onClick: _ => {\n        removerPedido(record.key);\n      },\n      title: \"Remover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))\n  };\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 5\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 5\n    }\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const salvarPedido = async () => {\n    let listaHortalicas = [];\n    await pedido.forEach(pedido => {\n      listaHortalicas = [...listaHortalicas, {\n        keyHortalica: pedido.key,\n        quantidade: pedido.quantidade\n      }];\n    });\n    const pedidoRequisicao = {\n      data: dateString,\n      hortalicas: listaHortalicas\n    };\n\n    try {\n      await api.post('/pedido', pedidoRequisicao, {\n        params: {\n          keyUsuario: getKeyUsuarioLogado()\n        }\n      });\n      notificarSucesso('Pedido cadastrado com sucesso.');\n      historico.push('/pedidos');\n    } catch (e) {\n      notificarErro(e.response.data.mensagem);\n    }\n  };\n\n  const inserirHortalica = () => {\n    if (quantidade <= 0) {\n      notificarErro('Quantidade inválida.');\n    } else {\n      let possui = false;\n      pedido.forEach(hort => {\n        if (hort.key === hortalica.key) {\n          possui = true;\n        }\n      });\n\n      if (!possui) {\n        setPedido([...pedido, { ...hortalica,\n          quantidade\n        }]);\n        setValorTotal(valorTotal + hortalica.valor * quantidade);\n        setHandlerUpdateTable(!handlerUpdateTable);\n        setQuantidade(1);\n      } else {\n        openNotification('Aviso!', 'A hortaliça já foi adicionada!');\n      }\n\n      handleCancel();\n    }\n  };\n\n  const removerPedido = key => {\n    let pedidoAux = [];\n    let valorReferencia = 0;\n    pedido.forEach(hort => {\n      if (hort.key !== key) {\n        pedidoAux = [...pedidoAux, hort];\n      } else {\n        valorReferencia = hort.valor * hort.quantidade;\n      }\n    });\n    showConfirm('Remover hortaliça', `Deseja remover a hortaliça de código: ${key}?`, atualizarPedido, {\n      pedidoAux,\n      valorReferencia\n    });\n  };\n\n  const atualizarPedido = async ({\n    pedidoAux,\n    valorReferencia\n  }) => {\n    await setPedido(pedidoAux);\n    setValorTotal(valorTotal - valorReferencia);\n  };\n\n  const getPedidos = () => {\n    return pedido;\n  };\n\n  const getHortalicas = async () => {\n    const {\n      data\n    } = await api.get('/hortalica');\n    return data;\n  };\n\n  const onChangeData = (date, dateString) => {\n    setData(date);\n    setDateString(dateString);\n  };\n\n  if (true) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Item, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Principal\"), React.createElement(Item, {\n      href: \"/pedidos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Pedidos\"), React.createElement(Item, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, cadastro && Cadastrar, !cadastro && Visualizar)), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Titulo, {\n      name: \"Cadastro de Pedidos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Hortali\\xE7as\"), React.createElement(TabelaHortalicas, {\n      getData: getHortalicas,\n      acoes: acoes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Pedido\"), React.createElement(TabelaHortalicas, {\n      getData: getPedidos,\n      acoes: acoesPedido,\n      handleUpdateTable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(Form, Object.assign({}, layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      label: \"Valor Total: \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Input, {\n      readOnly: true,\n      value: valorTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      label: \"Data: \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      value: data,\n      onChange: onChangeData,\n      format: 'DD/MM/YYYY',\n      locale: 'pt-BR',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"primary  \",\n      onClick: salvarPedido,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(Modal, {\n      title: \"Quantidade\",\n      visible: visible,\n      onOk: handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: handleCancel,\n      footer: [React.createElement(Button, {\n        key: \"back\",\n        onClick: handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Cancelar\"), React.createElement(Button, {\n        key: \"submit\",\n        type: \"primary\",\n        loading: loading,\n        onClick: inserirHortalica,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Adicionar\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      label: \"Quantidade: \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(InputNumber, {\n      min: 1,\n      onChange: value => {\n        setQuantidade(value);\n      },\n      value: quantidade,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Item, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Principal\"), React.createElement(Item, {\n      href: \"/pedidos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Pedidos\"), React.createElement(Item, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Visualizar\")));\n  }\n}\n\nexport default PerfilPedidos;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/perfil.js"],"names":["React","useState","useEffect","ArrowRightOutlined","DeleteOutlined","Form","Input","Button","Divider","notification","Modal","InputNumber","DatePicker","Breadcrumb","Container","Titulo","TabelaHortalicas","api","showConfirm","notificarErro","notificarSucesso","getKeyUsuarioLogado","useHistory","Item","PerfilPedidos","location","data","setData","quantidade","setQuantidade","pedido","setPedido","dateString","setDateString","hortalica","setHortalica","valorTotal","setValorTotal","historico","loading","visible","setVisible","confirmLoading","setConfirmLoading","handlerUpdateTable","setHandlerUpdateTable","cadastro","setCadastro","keyPedido","setKeyPedido","pedidoVisualizacao","setPedidoVisualizacao","verificaParams","params","URLSearchParams","search","tipo","get","key","console","log","acoes","title","dataIndex","render","_","record","marginLeft","showModal","openNotification","msg","descricao","open","message","description","acoesPedido","removerPedido","layout","labelCol","span","wrapperCol","tailLayout","offset","handleOk","setTimeout","handleCancel","salvarPedido","listaHortalicas","forEach","keyHortalica","pedidoRequisicao","hortalicas","post","keyUsuario","push","e","response","mensagem","inserirHortalica","possui","hort","valor","pedidoAux","valorReferencia","atualizarPedido","getPedidos","getHortalicas","onChangeData","date","Cadastrar","Visualizar","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons';\nimport {\n    Form,\n    Input,\n    Button,\n    Divider,\n    notification,\n    Modal,\n    InputNumber,\n    DatePicker\n} from 'antd';\n\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nimport api from '../../../service/api';\nimport {showConfirm} from '../../components/ConfirmAcao';\nimport {notificarErro,notificarSucesso} from '../../components/Notificacao';\nimport {getKeyUsuarioLogado} from '../../../service/usuario';\nimport { useHistory } from 'react-router-dom';\nconst { Item } = Breadcrumb;\n\n\nfunction PerfilPedidos({location}) {\n\n    const [data, setData] = useState('');\n    const [quantidade, setQuantidade] = useState(1);\n    const [pedido, setPedido] = useState([]);\n    const [dateString, setDateString] = useState('');\n    const [hortalica, setHortalica] = useState({});\n    const [valorTotal,setValorTotal] = useState(0);\n    const historico = useHistory();\n    const loading = false;\n    const [visible, setVisible] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n\n    const [cadastro, setCadastro] = useState(false);\n    const [keyPedido, setKeyPedido] = useState('');\n    const [pedidoVisualizacao,setPedidoVisualizacao] = useState({}); \n\n\n    useEffect(()=>{\n        async function verificaParams(){\n            const params = new URLSearchParams(location.search);\n            const tipo = params.get('cadastro');\n            const key = params.get('key');\n            setCadastro(true);\n            if(tipo==='0'){\n                setKeyPedido(key);\n                setCadastro(false);\n                const {data} = await api.get(`/pedido/${key}`);\n                setPedidoVisualizacao(data);\n                console.log(data);\n            }\n        }\n        verificaParams();\n    },[location]); \n\n    const acoes = {\n        title: 'Inserir',\n        dataIndex: 'inserir',\n        key: 'inserir',\n        render: (_, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<ArrowRightOutlined />}\n                    onClick={_ => {\n                        setHortalica(record);\n                        showModal();\n                    }}\n                    title='Inserir'\n                />\n            </span>\n        )\n    }\n\n    const openNotification = (msg, descricao) => {\n        notification.open({\n            message: `${msg}`,\n            description:\n                `${descricao}`,\n        });\n    };\n\n    const acoesPedido = {\n        title: 'Remover',\n        dataIndex: 'remover',\n        key: 'remover',\n        render: (_, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<DeleteOutlined />}\n                    danger\n                    onClick={_ => {\n                        removerPedido(record.key);\n                    }}\n                    title='Remover'\n                />\n            </span>\n        )\n    }\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 5,\n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: {\n            offset: 2,\n            span: 5,\n        },\n    };\n\n    const showModal = () => {\n        setVisible(true);\n    };\n\n    const handleOk = () => {\n        setConfirmLoading(true)\n        setTimeout(() => {\n            setVisible(false);\n            setConfirmLoading(false);\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        setVisible(false);\n    };\n\n    const salvarPedido = async() => {\n        let listaHortalicas = [];\n        await pedido.forEach((pedido) => {\n            listaHortalicas = [...listaHortalicas,{\n                keyHortalica:pedido.key,\n                quantidade:\n                pedido.quantidade\n            }];\n        });\n\n        const pedidoRequisicao = {\n            data:dateString,\n            hortalicas:listaHortalicas\n        };\n        try{\n            await api.post('/pedido',pedidoRequisicao,{params:{keyUsuario:getKeyUsuarioLogado()}});\n            notificarSucesso('Pedido cadastrado com sucesso.');\n            historico.push('/pedidos');\n        }catch(e){\n            notificarErro(e.response.data.mensagem);\n        }\n    }\n\n    const inserirHortalica = () => {\n        if(quantidade <= 0){\n            notificarErro('Quantidade inválida.');\n        }else{\n            let possui = false;\n            pedido.forEach((hort) => {\n                if (hort.key === hortalica.key) {\n                    possui = true;\n                }\n            });\n            if (!possui) {\n                setPedido([...pedido, {...hortalica,quantidade}])\n                setValorTotal(valorTotal + (hortalica.valor * quantidade));\n                setHandlerUpdateTable(!handlerUpdateTable);\n                setQuantidade(1);\n            } else {\n                openNotification('Aviso!', 'A hortaliça já foi adicionada!');\n            }\n            handleCancel();\n        }\n    }\n\n    const removerPedido = (key) => {\n        let pedidoAux = [];\n        let valorReferencia = 0;\n        pedido.forEach((hort) => {\n            if (hort.key !== key) {\n              pedidoAux = [...pedidoAux,hort];\n            }else{\n                valorReferencia = hort.valor*hort.quantidade;\n            }\n        });\n        showConfirm('Remover hortaliça',`Deseja remover a hortaliça de código: ${key}?`,atualizarPedido,{pedidoAux,valorReferencia});\n    }\n\n    const atualizarPedido = async ({pedidoAux,valorReferencia}) => {\n       await setPedido(pedidoAux);\n       setValorTotal(valorTotal - valorReferencia);\n    }\n\n\n    const getPedidos = () =>{\n        return pedido;\n    }\n\n    const getHortalicas = async () => {\n        const {data} = await api.get('/hortalica');\n        return data;\n    }\n\n    const onChangeData = (date, dateString) => {\n        setData(date);\n        setDateString(dateString);\n    }\n\n    if(true){\n        return (\n            <div>\n                <Breadcrumb>\n                    <Item href=\"/\">Principal</Item>\n                    <Item href=\"/pedidos\">Pedidos</Item>\n                    <Item active>\n                        {cadastro && Cadastrar}\n                        {!cadastro && Visualizar}\n                    </Item>\n                </Breadcrumb>\n                <Container>\n                    <Titulo name='Cadastro de Pedidos' />\n                    <Divider />\n                    <h2>Hortaliças</h2>\n                    <TabelaHortalicas getData={getHortalicas} acoes={acoes} />\n                    <Divider />\n                    <h2>Pedido</h2>\n                    <TabelaHortalicas getData={getPedidos} acoes={acoesPedido} handleUpdateTable/>\n                    <Divider />\n                    <Form {...layout}>\n                        <Form.Item\n                            {...tailLayout}\n                            label='Valor Total: '>\n                            <Input readOnly value={valorTotal}/>\n                        </Form.Item>\n                        <Form.Item\n                            {...tailLayout}\n                            label='Data: '>\n                            <DatePicker value={data} onChange={onChangeData} format={'DD/MM/YYYY'} locale={'pt-BR'}/>\n                        </Form.Item>\n                    </Form>\n                    <Button type='primary  ' onClick={salvarPedido}>Salvar</Button>\n                    <Modal\n                        title=\"Quantidade\"\n                        visible={visible}\n                        onOk={handleOk}\n                        confirmLoading={confirmLoading}\n                        onCancel={handleCancel}\n                        footer={[\n                            <Button key=\"back\" onClick={handleCancel}>\n                            Cancelar\n                            </Button>,\n                            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={inserirHortalica}>\n                            Adicionar\n                            </Button>,\n                        ]}\n                        \n                        >\n                        <Form {...layout}>\n                            <Form.Item {...tailLayout}\n                                label='Quantidade: '\n                            >\n                            <InputNumber min={1} onChange={(value) =>{\n                                setQuantidade(value);\n                            }} value={quantidade}/>\n                            </Form.Item>\n                        </Form>\n                    </Modal>\n                    <Divider />\n                </Container>\n            </div>\n        );\n    }else{\n        return(\n            <div>\n                <Breadcrumb>\n                    <Item href=\"/\">Principal</Item>\n                    <Item href=\"/pedidos\">Pedidos</Item>\n                    <Item active >Visualizar</Item>\n                </Breadcrumb>\n            </div>\n        );\n    }\n}\nexport default PerfilPedidos;"]},"metadata":{},"sourceType":"module"}