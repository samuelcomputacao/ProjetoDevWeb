{"ast":null,"code":"import api from './api';\nconst TOKEN = 'token';\nconst AVATAR = 'avatar';\nconst USUARIO_KEY = 'key_usuario';\nconst USUARIO_TIPO = 'tipo_usuario';\n\nconst getKeyUsuarioLogado = async () => {\n  const key = await sessionStorage.getItem(USUARIO_KEY);\n  return key;\n};\n\nconst isFuncionarioLogado = async () => {\n  const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n\n  if (tipo === '1') {\n    return true;\n  }\n\n  return false;\n};\n\nconst isClienteLogado = async () => {\n  const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n\n  if (tipo === '0') {\n    return true;\n  }\n\n  return false;\n};\n\nconst getToken = async () => {\n  const token = sessionStorage.getItem(TOKEN);\n  return token;\n};\n\nconst getAvatar = async () => {\n  const avatar = await sessionStorage.getItem(AVATAR);\n  return avatar;\n};\n\nconst setToken = async token => {\n  const {\n    data\n  } = await api.get('/usuarioToken/', {\n    params: {\n      Authentication: token\n    }\n  });\n  sessionStorage.setItem(TOKEN, token);\n  sessionStorage.setItem(AVATAR, data.avatar);\n  sessionStorage.setItem(USUARIO_KEY, data.key);\n  sessionStorage.setItem(USUARIO_TIPO, data.tipoUsuario);\n  window.location.reload();\n};\n\nconst getTipoUsuarioLogado = async () => {\n  const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n  return tipo;\n};\n\nconst sair = () => {\n  sessionStorage.clear();\n};\n\nexport { getKeyUsuarioLogado, isFuncionarioLogado, isClienteLogado, getToken, sair, setToken, getAvatar, getTipoUsuarioLogado };","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/service/usuario.js"],"names":["api","TOKEN","AVATAR","USUARIO_KEY","USUARIO_TIPO","getKeyUsuarioLogado","key","sessionStorage","getItem","isFuncionarioLogado","tipo","isClienteLogado","getToken","token","getAvatar","avatar","setToken","data","get","params","Authentication","setItem","tipoUsuario","window","location","reload","getTipoUsuarioLogado","sair","clear"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,YAAY,GAAG,cAArB;;AAEA,MAAMC,mBAAmB,GAAG,YAAW;AACnC,QAAMC,GAAG,GAAG,MAAMC,cAAc,CAACC,OAAf,CAAuBL,WAAvB,CAAlB;AACA,SAAOG,GAAP;AACH,CAHD;;AAKA,MAAMG,mBAAmB,GAAG,YAAY;AACpC,QAAMC,IAAI,GAAG,MAAMH,cAAc,CAACC,OAAf,CAAuBJ,YAAvB,CAAnB;;AAEA,MAAGM,IAAI,KAAG,GAAV,EAAc;AACT,WAAO,IAAP;AACJ;;AACD,SAAO,KAAP;AACH,CAPD;;AASA,MAAMC,eAAe,GAAG,YAAY;AAChC,QAAMD,IAAI,GAAG,MAAMH,cAAc,CAACC,OAAf,CAAuBJ,YAAvB,CAAnB;;AACA,MAAGM,IAAI,KAAG,GAAV,EAAc;AACV,WAAO,IAAP;AACF;;AACF,SAAO,KAAP;AACH,CAND;;AAQA,MAAME,QAAQ,GAAG,YAAY;AACzB,QAAMC,KAAK,GAAGN,cAAc,CAACC,OAAf,CAAuBP,KAAvB,CAAd;AACA,SAAOY,KAAP;AACH,CAHD;;AAKA,MAAMC,SAAS,GAAG,YAAY;AAC1B,QAAMC,MAAM,GAAG,MAAMR,cAAc,CAACC,OAAf,CAAuBN,MAAvB,CAArB;AACA,SAAOa,MAAP;AACH,CAHD;;AAKA,MAAMC,QAAQ,GAAG,MAAOH,KAAP,IAAiB;AAC9B,QAAM;AAACI,IAAAA;AAAD,MAAQ,MAAMjB,GAAG,CAACkB,GAAJ,CAAQ,gBAAR,EAA0B;AAACC,IAAAA,MAAM,EAAC;AAClDC,MAAAA,cAAc,EAACP;AADmC;AAAR,GAA1B,CAApB;AAGAN,EAAAA,cAAc,CAACc,OAAf,CAAuBpB,KAAvB,EAA6BY,KAA7B;AACAN,EAAAA,cAAc,CAACc,OAAf,CAAuBnB,MAAvB,EAA8Be,IAAI,CAACF,MAAnC;AACAR,EAAAA,cAAc,CAACc,OAAf,CAAuBlB,WAAvB,EAAmCc,IAAI,CAACX,GAAxC;AACAC,EAAAA,cAAc,CAACc,OAAf,CAAuBjB,YAAvB,EAAqCa,IAAI,CAACK,WAA1C;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,CATD;;AAWA,MAAMC,oBAAoB,GAAG,YAAY;AACrC,QAAMhB,IAAI,GAAG,MAAMH,cAAc,CAACC,OAAf,CAAuBJ,YAAvB,CAAnB;AACA,SAAOM,IAAP;AACH,CAHD;;AAKA,MAAMiB,IAAI,GAAG,MAAM;AACfpB,EAAAA,cAAc,CAACqB,KAAf;AACH,CAFD;;AAIA,SAAQvB,mBAAR,EAA4BI,mBAA5B,EAAgDE,eAAhD,EAAgEC,QAAhE,EAAyEe,IAAzE,EAA8EX,QAA9E,EAAwFF,SAAxF,EAAkGY,oBAAlG","sourcesContent":["import api from './api';\n\nconst TOKEN = 'token';\nconst AVATAR = 'avatar';\nconst USUARIO_KEY = 'key_usuario';\nconst USUARIO_TIPO = 'tipo_usuario';\n\nconst getKeyUsuarioLogado = async () =>{\n    const key = await sessionStorage.getItem(USUARIO_KEY);\n    return key;\n}\n\nconst isFuncionarioLogado = async () => {\n    const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n\n    if(tipo==='1'){\n         return true;\n    }\n    return false;\n}\n\nconst isClienteLogado = async () => {\n    const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n    if(tipo==='0'){\n        return true;\n     }\n    return false;\n}\n\nconst getToken = async () => {\n    const token = sessionStorage.getItem(TOKEN);\n    return token;\n}\n\nconst getAvatar = async () => {\n    const avatar = await sessionStorage.getItem(AVATAR);\n    return avatar;\n}\n\nconst setToken = async (token) => {\n    const {data}= await api.get('/usuarioToken/', {params:{\n        Authentication:token\n    }});\n    sessionStorage.setItem(TOKEN,token);\n    sessionStorage.setItem(AVATAR,data.avatar);\n    sessionStorage.setItem(USUARIO_KEY,data.key);\n    sessionStorage.setItem(USUARIO_TIPO, data.tipoUsuario);\n    window.location.reload();\n}\n\nconst getTipoUsuarioLogado = async () => {\n    const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n    return tipo;\n}\n\nconst sair = () => {\n    sessionStorage.clear()\n}\n\nexport {getKeyUsuarioLogado,isFuncionarioLogado,isClienteLogado,getToken,sair,setToken, getAvatar,getTipoUsuarioLogado};"]},"metadata":{},"sourceType":"module"}