{"ast":null,"code":"import api from './api';\nconst TOKEN = 'token';\nconst USUARIO = 'usuario';\n\nconst getKeyUsuarioLogado = () => {\n  return 3;\n};\n\nconst isFuncionarioLogado = () => {\n  return true;\n};\n\nconst isClienteLogado = () => {\n  return true;\n};\n\nconst getToken = async () => {\n  const token = sessionStorage.getItem(TOKEN);\n  return token;\n};\n\nconst getUsuarioCorrente = async () => {\n  const usuario = await sessionStorage.getItem(USUARIO);\n  console.log(usuario.nome);\n  return usuario;\n};\n\nconst setToken = async token => {\n  sessionStorage.setItem(TOKEN, token);\n  const {\n    data\n  } = await api.get('/usuarioToken/', {\n    params: {\n      Authentication: token\n    }\n  });\n  console.log(data);\n  sessionStorage.setItem(USUARIO, data);\n};\n\nconst sair = () => {\n  sessionStorage.removeItem(TOKEN);\n  sessionStorage.removeItem(USUARIO);\n};\n\nexport { getKeyUsuarioLogado, isFuncionarioLogado, isClienteLogado, getToken, sair, setToken, getUsuarioCorrente };","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/service/usuario.js"],"names":["api","TOKEN","USUARIO","getKeyUsuarioLogado","isFuncionarioLogado","isClienteLogado","getToken","token","sessionStorage","getItem","getUsuarioCorrente","usuario","console","log","nome","setToken","setItem","data","get","params","Authentication","sair","removeItem"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,OAAO,GAAG,SAAhB;;AAEA,MAAMC,mBAAmB,GAAG,MAAK;AAC7B,SAAO,CAAP;AACH,CAFD;;AAIA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,SAAO,IAAP;AACH,CAFD;;AAIA,MAAMC,eAAe,GAAG,MAAM;AAC1B,SAAO,IAAP;AACH,CAFD;;AAIA,MAAMC,QAAQ,GAAG,YAAY;AACzB,QAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuBR,KAAvB,CAAd;AACA,SAAOM,KAAP;AACH,CAHD;;AAKA,MAAMG,kBAAkB,GAAG,YAAY;AACnC,QAAMC,OAAO,GAAG,MAAMH,cAAc,CAACC,OAAf,CAAuBP,OAAvB,CAAtB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAApB;AACA,SAAOH,OAAP;AACH,CAJD;;AAMA,MAAMI,QAAQ,GAAG,MAAOR,KAAP,IAAiB;AAC9BC,EAAAA,cAAc,CAACQ,OAAf,CAAuBf,KAAvB,EAA6BM,KAA7B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAQ,MAAMjB,GAAG,CAACkB,GAAJ,CAAQ,gBAAR,EAA0B;AAACC,IAAAA,MAAM,EAAC;AAClDC,MAAAA,cAAc,EAACb;AADmC;AAAR,GAA1B,CAApB;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAT,EAAAA,cAAc,CAACQ,OAAf,CAAuBd,OAAvB,EAA+Be,IAA/B;AACH,CAPD;;AASA,MAAMI,IAAI,GAAG,MAAM;AACfb,EAAAA,cAAc,CAACc,UAAf,CAA0BrB,KAA1B;AACAO,EAAAA,cAAc,CAACc,UAAf,CAA0BpB,OAA1B;AACH,CAHD;;AAKA,SAAQC,mBAAR,EAA4BC,mBAA5B,EAAgDC,eAAhD,EAAgEC,QAAhE,EAAyEe,IAAzE,EAA8EN,QAA9E,EAAwFL,kBAAxF","sourcesContent":["import api from './api';\n\nconst TOKEN = 'token';\nconst USUARIO = 'usuario';\n\nconst getKeyUsuarioLogado = () =>{\n    return 3;\n}\n\nconst isFuncionarioLogado = () => {\n    return true;\n}\n\nconst isClienteLogado = () => {\n    return true;\n}\n\nconst getToken = async () => {\n    const token = sessionStorage.getItem(TOKEN);\n    return token;\n}\n\nconst getUsuarioCorrente = async () => {\n    const usuario = await sessionStorage.getItem(USUARIO);\n    console.log(usuario.nome);\n    return usuario;\n}\n\nconst setToken = async (token) => {\n    sessionStorage.setItem(TOKEN,token);\n    const {data}= await api.get('/usuarioToken/', {params:{\n        Authentication:token\n    }});\n    console.log(data);\n    sessionStorage.setItem(USUARIO,data);\n}\n\nconst sair = () => {\n    sessionStorage.removeItem(TOKEN);\n    sessionStorage.removeItem(USUARIO);\n}\n\nexport {getKeyUsuarioLogado,isFuncionarioLogado,isClienteLogado,getToken,sair,setToken, getUsuarioCorrente};"]},"metadata":{},"sourceType":"module"}