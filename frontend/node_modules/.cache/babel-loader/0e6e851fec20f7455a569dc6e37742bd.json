{"ast":null,"code":"import api from './api';\nconst TOKEN = 'token';\nconst AVATAR = 'avatar';\nconst USUARIO_KEY = 'key_usuario';\nconst USUARIO_TIPO = 'tipo_usuario';\n\nconst getKeyUsuarioLogado = async () => {\n  const key = await sessionStorage.getItem(USUARIO_KEY);\n  return key;\n};\n\nconst isFuncionarioLogado = async () => {\n  const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n  console.log(tipo);\n\n  if (tipo === '1') {\n    return true;\n  }\n\n  return false;\n};\n\nconst isClienteLogado = async () => {\n  const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n  console.log(tipo);\n\n  if (tipo === '0') {\n    return true;\n  }\n\n  return false;\n};\n\nconst getToken = async () => {\n  const token = sessionStorage.getItem(TOKEN);\n  return token;\n};\n\nconst getAvatar = async () => {\n  const avatar = await sessionStorage.getItem(AVATAR);\n  return avatar;\n};\n\nconst setToken = async token => {\n  const {\n    data\n  } = await api.get('/usuarioToken/', {\n    params: {\n      Authentication: token\n    }\n  });\n  console.log(`DATA >>> ${data.tipoUsuario}`);\n  sessionStorage.setItem(TOKEN, token);\n  sessionStorage.setItem(AVATAR, data.avatar);\n  sessionStorage.setItem(USUARIO_KEY, data.key);\n  sessionStorage.setItem(USUARIO_TIPO, data.tipoUsuario);\n  setTimeout(() => {\n    window.location.reload();\n  }, 2000);\n};\n\nconst getTipoUsuarioLogado = async () => {\n  const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n  return tipo;\n};\n\nconst sair = () => {\n  sessionStorage.clear();\n  setTimeout(() => {\n    window.location.reload();\n  }, 500);\n};\n\nexport { getKeyUsuarioLogado, isFuncionarioLogado, isClienteLogado, getToken, sair, setToken, getAvatar, getTipoUsuarioLogado };","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/service/usuario.js"],"names":["api","TOKEN","AVATAR","USUARIO_KEY","USUARIO_TIPO","getKeyUsuarioLogado","key","sessionStorage","getItem","isFuncionarioLogado","tipo","console","log","isClienteLogado","getToken","token","getAvatar","avatar","setToken","data","get","params","Authentication","tipoUsuario","setItem","setTimeout","window","location","reload","getTipoUsuarioLogado","sair","clear"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,YAAY,GAAG,cAArB;;AAEA,MAAMC,mBAAmB,GAAG,YAAW;AACnC,QAAMC,GAAG,GAAG,MAAMC,cAAc,CAACC,OAAf,CAAuBL,WAAvB,CAAlB;AACA,SAAOG,GAAP;AACH,CAHD;;AAKA,MAAMG,mBAAmB,GAAG,YAAY;AACpC,QAAMC,IAAI,GAAG,MAAMH,cAAc,CAACC,OAAf,CAAuBJ,YAAvB,CAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAGA,IAAI,KAAG,GAAV,EAAc;AACT,WAAO,IAAP;AACJ;;AACD,SAAO,KAAP;AACH,CAPD;;AASA,MAAMG,eAAe,GAAG,YAAY;AAChC,QAAMH,IAAI,GAAG,MAAMH,cAAc,CAACC,OAAf,CAAuBJ,YAAvB,CAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAGA,IAAI,KAAG,GAAV,EAAc;AACV,WAAO,IAAP;AACF;;AACF,SAAO,KAAP;AACH,CAPD;;AASA,MAAMI,QAAQ,GAAG,YAAY;AACzB,QAAMC,KAAK,GAAGR,cAAc,CAACC,OAAf,CAAuBP,KAAvB,CAAd;AACA,SAAOc,KAAP;AACH,CAHD;;AAKA,MAAMC,SAAS,GAAG,YAAY;AAC1B,QAAMC,MAAM,GAAG,MAAMV,cAAc,CAACC,OAAf,CAAuBN,MAAvB,CAArB;AACA,SAAOe,MAAP;AACH,CAHD;;AAKA,MAAMC,QAAQ,GAAG,MAAOH,KAAP,IAAiB;AAC9B,QAAM;AAACI,IAAAA;AAAD,MAAQ,MAAMnB,GAAG,CAACoB,GAAJ,CAAQ,gBAAR,EAA0B;AAACC,IAAAA,MAAM,EAAC;AAClDC,MAAAA,cAAc,EAACP;AADmC;AAAR,GAA1B,CAApB;AAGAJ,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWO,IAAI,CAACI,WAAY,EAAzC;AACAhB,EAAAA,cAAc,CAACiB,OAAf,CAAuBvB,KAAvB,EAA6Bc,KAA7B;AACAR,EAAAA,cAAc,CAACiB,OAAf,CAAuBtB,MAAvB,EAA8BiB,IAAI,CAACF,MAAnC;AACAV,EAAAA,cAAc,CAACiB,OAAf,CAAuBrB,WAAvB,EAAmCgB,IAAI,CAACb,GAAxC;AACAC,EAAAA,cAAc,CAACiB,OAAf,CAAuBpB,YAAvB,EAAqCe,IAAI,CAACI,WAA1C;AACAE,EAAAA,UAAU,CAAC,MAAI;AACZC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACF,GAFS,EAER,IAFQ,CAAV;AAGH,CAZD;;AAcA,MAAMC,oBAAoB,GAAG,YAAY;AACrC,QAAMnB,IAAI,GAAG,MAAMH,cAAc,CAACC,OAAf,CAAuBJ,YAAvB,CAAnB;AACA,SAAOM,IAAP;AACH,CAHD;;AAKA,MAAMoB,IAAI,GAAG,MAAM;AACfvB,EAAAA,cAAc,CAACwB,KAAf;AACAN,EAAAA,UAAU,CAAC,MAAI;AACXC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACF,GAFQ,EAEP,GAFO,CAAV;AAGH,CALD;;AAOA,SAAQvB,mBAAR,EAA4BI,mBAA5B,EAAgDI,eAAhD,EAAgEC,QAAhE,EAAyEgB,IAAzE,EAA8EZ,QAA9E,EAAwFF,SAAxF,EAAkGa,oBAAlG","sourcesContent":["import api from './api';\n\nconst TOKEN = 'token';\nconst AVATAR = 'avatar';\nconst USUARIO_KEY = 'key_usuario';\nconst USUARIO_TIPO = 'tipo_usuario';\n\nconst getKeyUsuarioLogado = async () =>{\n    const key = await sessionStorage.getItem(USUARIO_KEY);\n    return key;\n}\n\nconst isFuncionarioLogado = async () => {\n    const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n    console.log(tipo);\n    if(tipo==='1'){\n         return true;\n    }\n    return false;\n}\n\nconst isClienteLogado = async () => {\n    const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n    console.log(tipo);\n    if(tipo==='0'){\n        return true;\n     }\n    return false;\n}\n\nconst getToken = async () => {\n    const token = sessionStorage.getItem(TOKEN);\n    return token;\n}\n\nconst getAvatar = async () => {\n    const avatar = await sessionStorage.getItem(AVATAR);\n    return avatar;\n}\n\nconst setToken = async (token) => {\n    const {data}= await api.get('/usuarioToken/', {params:{\n        Authentication:token\n    }});\n    console.log(`DATA >>> ${data.tipoUsuario}`);\n    sessionStorage.setItem(TOKEN,token);\n    sessionStorage.setItem(AVATAR,data.avatar);\n    sessionStorage.setItem(USUARIO_KEY,data.key);\n    sessionStorage.setItem(USUARIO_TIPO, data.tipoUsuario);\n    setTimeout(()=>{\n       window.location.reload();\n    },2000);\n}\n\nconst getTipoUsuarioLogado = async () => {\n    const tipo = await sessionStorage.getItem(USUARIO_TIPO);\n    return tipo;\n}\n\nconst sair = () => {\n    sessionStorage.clear();\n    setTimeout(()=>{\n        window.location.reload();\n     },500);\n}\n\nexport {getKeyUsuarioLogado,isFuncionarioLogado,isClienteLogado,getToken,sair,setToken, getAvatar,getTipoUsuarioLogado};"]},"metadata":{},"sourceType":"module"}