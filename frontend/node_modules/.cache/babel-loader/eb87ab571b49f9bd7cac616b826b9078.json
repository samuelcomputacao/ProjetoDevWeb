{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport TabelaPedidos from '../../components/TabelaPedidos';\nimport Titulo from '../../components/Titulo';\nimport { CloseOutlined, SearchOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { Container, Breadcrumb } from 'react-bootstrap';\nimport { Divider, Button } from 'antd';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarErro, notificarSucesso } from '../../components/Notificacao';\nimport { getKeyUsuarioLogado } from '../../../service/usuario';\nimport api from '../../../service/api';\nconst {\n  Item\n} = Breadcrumb;\n\nfunction Pedidos() {\n  const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n  const [keyUsuario, setKeyUsuario] = useState(0);\n  useEffect(() => {\n    buscarPedidos();\n    setKeyUsuario(getKeyUsuarioLogado());\n  }, []);\n\n  const buscarPedidos = async idCliente => {\n    const {\n      data\n    } = await api.get('/pedido', {\n      params: {\n        keyUsuario\n      }\n    });\n    return data;\n  };\n\n  const acoes = {\n    title: 'Ações',\n    dataIndex: 'acoes',\n    key: 'acoes',\n    render: (_, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        margin: '1px'\n      },\n      icon: React.createElement(SearchOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }),\n      title: \"Ver Pedido\",\n      onClick: _ => {\n        visualizarPedido(record);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), record.status !== 'CANCELADO' && React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        margin: '1px'\n      },\n      danger: true,\n      title: \"Cancelar Pedido\",\n      icon: React.createElement(CloseOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        showConfirm(\"Cancelar Pedido\", \"Deseja Cancelar o pedido?\", cancelarPedido, record.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        margin: '1px'\n      },\n      title: \"Repetir Pedido\",\n      icon: React.createElement(ReloadOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        repetirPedido(record);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))\n  };\n\n  const visualizarPedido = pedido => {\n    alert(pedido.id);\n  };\n\n  const cancelarPedido = async key => {\n    try {\n      await api.delete(`/pedido/${key}`, {\n        params: {\n          keyUsuario: keyUsuario\n        }\n      });\n      notificarSucesso('Pedido cancelado com sucesso!');\n      setHandlerUpdateTable(!handlerUpdateTable);\n    } catch (e) {\n      const {\n        mensagem\n      } = e.response.data;\n      notificarErro(mensagem);\n    }\n  };\n\n  const repetirPedido = record => {\n    showConfirm(\"Repetir Pedido\", \"Deseja repetir o pedido?\", confirmRepetir, record.key);\n  };\n\n  const confirmRepetir = async key => {};\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Item, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Principal\"), React.createElement(Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Pedidos\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Titulo, {\n    name: \"Pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(TabelaPedidos, {\n    getData: buscarPedidos,\n    acoes: acoes,\n    handlerUpdateTable: handlerUpdateTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    href: \"/perfilPedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Cadastrar\")));\n}\n\nexport default Pedidos;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/index.js"],"names":["React","useEffect","useState","TabelaPedidos","Titulo","CloseOutlined","SearchOutlined","ReloadOutlined","Container","Breadcrumb","Divider","Button","showConfirm","notificarErro","notificarSucesso","getKeyUsuarioLogado","api","Item","Pedidos","handlerUpdateTable","setHandlerUpdateTable","keyUsuario","setKeyUsuario","buscarPedidos","idCliente","data","get","params","acoes","title","dataIndex","key","render","_","record","margin","visualizarPedido","status","cancelarPedido","repetirPedido","pedido","alert","id","delete","e","mensagem","response","confirmRepetir"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TabelaPedidos from '../../components/TabelaPedidos';\nimport Titulo from '../../components/Titulo';\nimport { CloseOutlined,SearchOutlined,ReloadOutlined} from '@ant-design/icons';\nimport {Container, Breadcrumb} from 'react-bootstrap';\nimport { Divider,Button} from 'antd';\nimport {showConfirm} from '../../components/ConfirmAcao';\nimport {notificarErro,notificarSucesso} from '../../components/Notificacao';\nimport {getKeyUsuarioLogado} from '../../../service/usuario';\nimport api from '../../../service/api';\nconst {Item} = Breadcrumb;\n\nfunction Pedidos() {\n\n    const [handlerUpdateTable,setHandlerUpdateTable] = useState(false);\n\n\n    const [keyUsuario,setKeyUsuario] = useState(0);\n\n    useEffect(()=>{\n        buscarPedidos();\n        setKeyUsuario(getKeyUsuarioLogado());\n    },[]);\n\n    const buscarPedidos = async(idCliente) => {\n        const {data} = await api.get('/pedido',{params:{keyUsuario}});\n        return data;\n        \n    }\n\n    const acoes = {\n        title: 'Ações',\n        dataIndex: 'acoes',\n        key: 'acoes',\n        render: (_,record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ margin: '1px' }}\n                    icon={<SearchOutlined />}\n                    title='Ver Pedido'\n                    onClick={_=>{visualizarPedido(record)}}\n                />\n                {record.status !== 'CANCELADO' &&\n                <Button\n                    type='primary'\n                    style={{ margin: '1px' }}\n                    danger\n                    title='Cancelar Pedido'\n                    icon={<CloseOutlined />} \n                    onClick={_=>{\n                        showConfirm(\"Cancelar Pedido\",\"Deseja Cancelar o pedido?\",cancelarPedido,record.key);\n                       }\n                    }\n                    />\n                }\n                <Button\n                    type='primary'\n                    style={{ margin: '1px' }}\n                    title='Repetir Pedido'\n                    icon={ <ReloadOutlined />} \n                    onClick={_=>{repetirPedido(record)}}\n                    />\n            </span>\n        )\n    };\n\n    const visualizarPedido = pedido => {\n        alert(pedido.id);\n    }\n\n    const cancelarPedido = async (key) => {\n       try{\n            await api.delete(`/pedido/${key}`,{params:{keyUsuario:keyUsuario}});\n            notificarSucesso('Pedido cancelado com sucesso!');\n            setHandlerUpdateTable(!handlerUpdateTable);\n       }catch(e){\n           const {mensagem} = e.response.data;\n           notificarErro(mensagem);\n       }\n    }\n\n    const repetirPedido = (record) => {\n        showConfirm(\"Repetir Pedido\",\"Deseja repetir o pedido?\",confirmRepetir,record.key);\n    }\n\n    const confirmRepetir = async (key) => {\n        \n    }\n\n    return (\n        <div>\n            <Breadcrumb>\n                <Item href=\"/\">Principal</Item>\n                <Item active>Pedidos</Item>\n            </Breadcrumb>\n            <Container>\n                <Titulo name=\"Pedidos\" />\n                <Divider/>\n                <TabelaPedidos getData={buscarPedidos} acoes={acoes} handlerUpdateTable={handlerUpdateTable}/>\n                <Divider/>\n                <Button type='primary' href='/perfilPedidos'>Cadastrar</Button>\n            </Container>\n        </div>\n    );\n}\n\nexport default Pedidos;"]},"metadata":{},"sourceType":"module"}