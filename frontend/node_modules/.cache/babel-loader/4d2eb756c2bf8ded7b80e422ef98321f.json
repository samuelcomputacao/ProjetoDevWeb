{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button, Select, notification } from 'antd';\n\nfunction FormUsuario({\n  cod,\n  update\n}) {\n  const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n  const [nome, setNome] = useState('');\n  const [funcao, setFuncao] = useState('');\n  const [cpfCnpj, setCpfCnpj] = useState('');\n  const [senha, setSenha] = useState('');\n  const history = useHistory();\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = values => {\n    setNome(values.nome);\n    setFuncao(values.funcao);\n    setCpfCnpj(values.cpfCnpj);\n    setSenha(values.senha);\n    openNotification();\n    setTimeout(redirect, 1000);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n\n  const openNotification = () => {\n    if (update) {\n      notification.open({\n        message: 'Atualizado',\n        description: 'O usuário foi atualizado com sucesso',\n        onClick: () => {\n          console.log('Notification Clicked!');\n        }\n      });\n    } else {\n      notification.open({\n        message: 'Salvo',\n        description: 'O usuário foi salvo com sucesso',\n        onClick: () => {\n          console.log('Notification Clicked!');\n        }\n      });\n    }\n  };\n\n  const redirect = () => {\n    history.goBack();\n  };\n\n  const getAcao = () => {\n    let retorno = 'Salvar';\n    if (update) retorno = 'Atualizar';\n  };\n\n  return React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    onValuesChange: onFormLayoutChange,\n    size: \"larger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Nome\",\n    name: \"nome\",\n    rules: [{\n      required: true,\n      message: 'O nome é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Cpf/Cnpj\",\n    name: \"cpfCnpj\",\n    rules: [{\n      required: true,\n      message: 'O CPF/Cnpj é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Fun\\xE7\\xE3o\",\n    name: \"funcao\",\n    rules: [{\n      required: true,\n      message: 'A Função é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, categorias.map(cat => {\n    return React.createElement(Select.Option, {\n      value: cat,\n      key: cat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, cat);\n  }))), React.createElement(Form.Item, {\n    label: \"Senha\",\n    name: \"senha\",\n    rules: [{\n      required: true,\n      message: 'A senha é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), update && React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Atualizar\"), !update && React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Salvar\"), React.createElement(Button, {\n    type: \"danger\",\n    onClick: redirect,\n    htmlType: \"submit\",\n    style: {\n      marginLeft: '2px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Cancelar\")));\n}\n\nexport default FormUsuario;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js"],"names":["React","useState","useHistory","Form","Input","Button","Select","notification","FormUsuario","cod","update","categorias","setCategorias","nome","setNome","funcao","setFuncao","cpfCnpj","setCpfCnpj","senha","setSenha","history","onFormLayoutChange","size","console","log","onFinish","values","openNotification","setTimeout","redirect","onFinishFailed","errorInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","open","message","description","onClick","goBack","getAcao","retorno","remember","required","map","cat","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n    notification\n} from 'antd';\n\nfunction FormUsuario({ cod, update }) {\n\n    const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n    const [nome, setNome] = useState('');\n    const [funcao, setFuncao] = useState('');\n    const [cpfCnpj, setCpfCnpj] = useState('');\n    const [senha,setSenha] = useState('');\n\n    const history = useHistory();\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = values => {\n        setNome(values.nome);\n        setFuncao(values.funcao);\n        setCpfCnpj(values.cpfCnpj);\n        setSenha(values.senha);\n        openNotification();\n        setTimeout(redirect, 1000);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n\n    const openNotification = () => {\n        if (update) {\n            notification.open({\n                message: 'Atualizado',\n                description:\n                    'O usuário foi atualizado com sucesso',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n        }else{\n            notification.open({\n                message: 'Salvo',\n                description:\n                    'O usuário foi salvo com sucesso',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n        }\n    };\n\n    const redirect = () => {\n        history.goBack();\n    }\n\n    const getAcao = () => {\n        let retorno = 'Salvar';\n        if (update) retorno = 'Atualizar';\n    }\n\n    return (\n        <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            onValuesChange={onFormLayoutChange}\n            size='larger'>\n            <Form.Item\n                label='Nome'\n                name=\"nome\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'O nome é obrigatorio!'\n                    }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label='Cpf/Cnpj'\n                name=\"cpfCnpj\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'O CPF/Cnpj é obrigatorio!'\n                    }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label='Função'\n                name=\"funcao\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'A Função é obrigatoria!',\n                    }]}\n            >\n                <Select>\n                    {\n                        categorias.map((cat) => {\n                            return (<Select.Option value={cat} key={cat}>{cat}</Select.Option>)\n                        })\n                    }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label='Senha'\n                name=\"senha\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'A senha é obrigatoria!'\n                    }]}\n            >\n                <Input.Password />\n            </Form.Item>\n            \n            <Form.Item {...tailLayout}>\n                {update &&\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\">\n\n                        Atualizar\n                    </Button>\n                }\n                {!update &&\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\">\n                        Salvar\n                    </Button>\n                }\n                <Button\n                    type=\"danger\"\n                    onClick={redirect}\n                    htmlType=\"submit\"\n                    style={{ marginLeft: '2px' }}\n                >\n                    Cancelar\n                        </Button>\n\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormUsuario;"]},"metadata":{},"sourceType":"module"}