{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/cadastrar.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Form, Input, Button, Divider, notification, Modal, InputNumber } from 'antd';\nimport Menu from '../../components/Menu';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nconst {\n  Item\n} = Breadcrumb;\n\nfunction CadastroPedidos() {\n  const acoes = {\n    title: 'Inserir',\n    dataIndex: 'inserir',\n    key: 'inserir',\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(ArrowRightOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        setHortalica(record);\n        showModal();\n      },\n      title: \"Inserir\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }))\n  };\n\n  const openNotification = (msg, descricao) => {\n    notification.open({\n      message: `${msg}`,\n      description: `${descricao}`\n    });\n  };\n\n  const acoesPedido = {\n    title: 'Remover',\n    dataIndex: 'remover',\n    key: 'remover',\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      danger: true,\n      onClick: _ => {\n        alert(record);\n      },\n      title: \"Remover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))\n  };\n  const history = useHistory();\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 5\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 5\n    }\n  };\n\n  const redirect = () => {\n    history.goBack();\n  };\n\n  const hortalicasBKP = [{\n    id: '1',\n    nome: 'Alface',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: 3\n  }, {\n    id: '2',\n    nome: 'Coentro',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: 2\n  }, {\n    id: '3',\n    nome: 'Cebola',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: 5\n  }];\n  const [data, setData] = useState('');\n  const [quantidade, setQuantidade] = useState(0);\n  const [pedido, setPedido] = useState([]);\n  const [hortalicas, setHortalicas] = useState([...hortalicasBKP]);\n  const [hortalica, setHortalica] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const salvarPedido = () => {\n    alert(data);\n  };\n\n  const inserirHortalica = hortalica => {\n    let possui = false;\n    pedido.map(hort => {\n      if (hort.id === hortalica.id) {\n        possui = true;\n      }\n    });\n\n    if (!possui) {\n      setPedido([...pedido, hortalica]);\n    } else {\n      openNotification('Aviso!', 'A hortaliça já foi adicionada!');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Item, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Principal\"), React.createElement(Item, {\n    href: \"/pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Pedidos\"), React.createElement(Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Cadastrar\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Titulo, {\n    name: \"Cadastro de Pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Hortali\\xE7as\"), React.createElement(TabelaHortalicas, {\n    dataSource: hortalicas,\n    acoes: acoes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Pedido\"), React.createElement(TabelaHortalicas, {\n    dataSource: pedido,\n    acoes: acoesPedido,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(Form, Object.assign({}, layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Valor Total: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(Input, {\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Data: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), React.createElement(Input, {\n    value: data,\n    onChange: evnt => {\n      setData(evnt.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    type: \"primary  \",\n    onClick: salvarPedido,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Salvar\"), React.createElement(Modal, {\n    title: \"Quantidade\",\n    visible: visible,\n    onOk: handleOk,\n    confirmLoading: confirmLoading,\n    onCancel: handleCancel,\n    footer: [React.createElement(Button, {\n      key: \"back\",\n      onClick: handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Camcelar\"), React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: loading,\n      onClick: inserirHortalica,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Adicionar\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Quantidade: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(Input, {\n    min: 0,\n    onChange: event => {\n      setQuantidade(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })));\n}\n\nexport default CadastroPedidos;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/cadastrar.js"],"names":["React","useState","useHistory","ArrowRightOutlined","DeleteOutlined","Form","Input","Button","Divider","notification","Modal","InputNumber","Menu","Breadcrumb","Container","Titulo","TabelaHortalicas","Item","CadastroPedidos","acoes","title","dataIndex","key","render","text","record","marginLeft","_","setHortalica","showModal","openNotification","msg","descricao","open","message","description","acoesPedido","alert","history","layout","labelCol","span","wrapperCol","tailLayout","offset","redirect","goBack","hortalicasBKP","id","nome","categoria","classificacao","valor","data","setData","quantidade","setQuantidade","pedido","setPedido","hortalicas","setHortalicas","hortalica","loading","setLoading","visible","setVisible","confirmLoading","setConfirmLoading","handleOk","setTimeout","handleCancel","salvarPedido","inserirHortalica","possui","map","hort","evnt","target","value","event"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons';\nimport {\n    Form,\n    Input,\n    Button,\n    Divider,\n    notification,\n    Modal,\n    InputNumber\n} from 'antd';\n\nimport Menu from '../../components/Menu';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nconst { Item } = Breadcrumb;\n\n\nfunction CadastroPedidos() {\n    const acoes = {\n        title: 'Inserir',\n        dataIndex: 'inserir',\n        key: 'inserir',\n        render: (text, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<ArrowRightOutlined />}\n                    onClick={_ => {\n                        setHortalica(record);\n                        showModal();\n                    }}\n                    title='Inserir'\n                />\n            </span>\n        )\n    }\n\n    const openNotification = (msg, descricao) => {\n        notification.open({\n            message: `${msg}`,\n            description:\n                `${descricao}`,\n        });\n    };\n\n    const acoesPedido = {\n        title: 'Remover',\n        dataIndex: 'remover',\n        key: 'remover',\n        render: (text, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<DeleteOutlined />}\n                    danger\n                    onClick={_ => {\n                        alert(record)\n                    }}\n                    title='Remover'\n                />\n            </span>\n        )\n    }\n\n    const history = useHistory();\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 5,\n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: {\n            offset: 2,\n            span: 5,\n        },\n    };\n\n    const redirect = () => {\n        history.goBack();\n    }\n\n    const hortalicasBKP = [\n        {\n            id: '1',\n            nome: 'Alface',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: 3\n        },\n        {\n            id: '2',\n            nome: 'Coentro',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: 2,\n        },\n        {\n            id: '3',\n            nome: 'Cebola',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: 5,\n\n        },\n    ];\n\n\n    const [data, setData] = useState('');\n    const [quantidade, setQuantidade] = useState(0);\n    const [pedido, setPedido] = useState([]);\n    const [hortalicas, setHortalicas] = useState([...hortalicasBKP]);\n    const [hortalica, setHortalica] = useState({});\n\n    const [loading, setLoading] = useState(false);\n\n    const [visible, setVisible] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false);\n\n    const showModal = () => {\n        setVisible(true);\n    };\n\n    const handleOk = () => {\n        setConfirmLoading(true)\n        setTimeout(() => {\n            setVisible(false);\n            setConfirmLoading(false);\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        setVisible(false);\n    };\n\n    const salvarPedido = () => {\n        alert(data);\n    }\n\n    const inserirHortalica = (hortalica) => {\n        let possui = false;\n        pedido.map((hort) => {\n            if (hort.id === hortalica.id) {\n                possui = true;\n            }\n        });\n        if (!possui) {\n            setPedido([...pedido, hortalica])\n        } else {\n            openNotification('Aviso!', 'A hortaliça já foi adicionada!');\n        }\n    }\n\n\n\n    return (\n        <div>\n            <Menu />\n            <Breadcrumb>\n                <Item href=\"/\">Principal</Item>\n                <Item href=\"/pedidos\">Pedidos</Item>\n                <Item active >Cadastrar</Item>\n            </Breadcrumb>\n            <Container>\n                <Titulo name='Cadastro de Pedidos' />\n                <Divider />\n                <h2>Hortaliças</h2>\n                <TabelaHortalicas dataSource={hortalicas} acoes={acoes} />\n                <Divider />\n                <h2>Pedido</h2>\n                <TabelaHortalicas dataSource={pedido} acoes={acoesPedido} />\n                <Divider />\n                <Form {...layout}>\n                    <Form.Item\n                        {...tailLayout}\n                        label='Valor Total: '>\n                        <Input readOnly />\n                    </Form.Item>\n                    <Form.Item\n                        {...tailLayout}\n                        label='Data: '>\n                        <Input value={data} onChange={(evnt) => { setData(evnt.target.value) }} />\n                    </Form.Item>\n                </Form>\n                <Button type='primary  ' onClick={salvarPedido}>Salvar</Button>\n                <Modal\n                    title=\"Quantidade\"\n                    visible={visible}\n                    onOk={handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={handleCancel}\n                    footer={[\n                        <Button key=\"back\" onClick={handleCancel}>\n                          Camcelar\n                        </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={loading} onClick={inserirHortalica}>\n                          Adicionar\n                        </Button>,\n                      ]}\n                    \n                    >\n                    <Form {...layout}>\n                        <Form.Item {...tailLayout}\n                            label='Quantidade: '\n                        >\n                        <Input min={0} onChange={(event) =>{\n                            setQuantidade(event.target.value);\n                        }}/>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n                <Divider />\n            </Container>\n        </div>\n    );\n}\n\nexport default CadastroPedidos;"]},"metadata":{},"sourceType":"module"}