{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../../service/api';\nimport { notificarErro, notificarSucesso } from '../Notificacao/index';\nimport { Form, Input, Button, Select } from 'antd';\n\nfunction FormUsuario({\n  cod,\n  update\n}) {\n  const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n  const [nome, setNome] = useState('');\n  const [funcao, setFuncao] = useState('');\n  const [cpfCnpj, setCpfCnpj] = useState('');\n  const [senha, setSenha] = useState('');\n  const [confirmSenha, setConfirmSenha] = useState('');\n  const history = useHistory();\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = async values => {\n    const {\n      nome,\n      funcao,\n      cpfCnpj,\n      senha,\n      confirmSenha\n    } = values;\n\n    if (senha !== confirmSenha) {\n      notificarErro('As senhas não são iguais');\n    } else {\n      const usuario = {\n        nome,\n        funcao,\n        cpfCnpj,\n        senha\n      };\n\n      if (salvar(usuario)) {\n        openNotification(); // setTimeout(redirect, 1000);\n      }\n    }\n  };\n\n  const salvar = async usuario => {\n    const {\n      status\n    } = await api.post('/usuario', {\n      usuario\n    });\n    return status == 200;\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n\n  const openNotification = () => {\n    if (update) {\n      notificarSucesso('O usuário foi atualizado com sucesso.');\n    } else {\n      notificarSucesso('O usuário foi salvo com sucesso.');\n    }\n  };\n\n  const redirect = () => {\n    history.goBack();\n  };\n\n  const getAcao = () => {\n    let retorno = 'Salvar';\n    if (update) retorno = 'Atualizar';\n  };\n\n  return React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    onValuesChange: onFormLayoutChange,\n    size: \"larger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Nome\",\n    name: \"nome\",\n    rules: [{\n      required: true,\n      message: 'O nome é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Cpf/Cnpj\",\n    name: \"cpfCnpj\",\n    rules: [{\n      required: true,\n      message: 'O CPF/Cnpj é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Fun\\xE7\\xE3o\",\n    name: \"funcao\",\n    rules: [{\n      required: true,\n      message: 'A Função é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, categorias.map(cat => {\n    return React.createElement(Select.Option, {\n      value: cat,\n      key: cat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, cat);\n  }))), React.createElement(Form.Item, {\n    label: \"Senha\",\n    name: \"senha\",\n    rules: [{\n      required: true,\n      message: 'A senha é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Confirma\\xE7\\xE3o\",\n    name: \"confirmSenha\",\n    rules: [{\n      required: true,\n      message: 'A confirmação da senha é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), update && React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Atualizar\"), !update && React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Salvar\"), React.createElement(Button, {\n    type: \"danger\",\n    onClick: redirect,\n    htmlType: \"submit\",\n    style: {\n      marginLeft: '2px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Cancelar\")));\n}\n\nexport default FormUsuario;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/components/FormUsuario/index.js"],"names":["React","useState","useHistory","api","notificarErro","notificarSucesso","Form","Input","Button","Select","FormUsuario","cod","update","categorias","setCategorias","nome","setNome","funcao","setFuncao","cpfCnpj","setCpfCnpj","senha","setSenha","confirmSenha","setConfirmSenha","history","onFormLayoutChange","size","console","log","onFinish","values","usuario","salvar","openNotification","status","post","onFinishFailed","errorInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","redirect","goBack","getAcao","retorno","remember","required","message","map","cat","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../../service/api';\nimport { notificarErro, notificarSucesso } from '../Notificacao/index';\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n} from 'antd';\n\nfunction FormUsuario({ cod, update }) {\n\n    const [categorias, setCategorias] = useState(['Funcionario', 'Cliente']);\n    const [nome, setNome] = useState('');\n    const [funcao, setFuncao] = useState('');\n    const [cpfCnpj, setCpfCnpj] = useState('');\n    const [senha, setSenha] = useState('');\n    const [confirmSenha, setConfirmSenha] = useState('');\n\n    const history = useHistory();\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = async (values) => {\n\n        const { nome, funcao, cpfCnpj, senha, confirmSenha } = values;\n\n        if (senha !== confirmSenha) {\n            notificarErro('As senhas não são iguais');\n        } else {\n\n            const usuario = {\n                nome,\n                funcao,\n                cpfCnpj,\n                senha\n            };\n\n            if (salvar(usuario)) {\n                openNotification();\n                // setTimeout(redirect, 1000);\n            }\n        }\n    };\n\n    const salvar = async (usuario) => {\n        const {status} = await api.post('/usuario', {usuario});\n        return (status==200);\n    }\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n\n    const openNotification = () => {\n        if (update) {\n            notificarSucesso('O usuário foi atualizado com sucesso.');\n        } else {\n            notificarSucesso('O usuário foi salvo com sucesso.');\n        }\n    };\n\n    const redirect = () => {\n        history.goBack();\n    }\n\n    const getAcao = () => {\n        let retorno = 'Salvar';\n        if (update) retorno = 'Atualizar';\n    }\n\n    return (\n        <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            onValuesChange={onFormLayoutChange}\n            size='larger'>\n            <Form.Item\n                label='Nome'\n                name=\"nome\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'O nome é obrigatorio!'\n                    }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label='Cpf/Cnpj'\n                name=\"cpfCnpj\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'O CPF/Cnpj é obrigatorio!'\n                    }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label='Função'\n                name=\"funcao\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'A Função é obrigatoria!',\n                    }]}\n            >\n                <Select>\n                    {\n                        categorias.map((cat) => {\n                            return (<Select.Option value={cat} key={cat}>{cat}</Select.Option>)\n                        })\n                    }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label='Senha'\n                name=\"senha\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'A senha é obrigatoria!'\n                    }]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                label='Confirmação'\n                name=\"confirmSenha\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'A confirmação da senha é obrigatoria!'\n                    }]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                {update &&\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\">\n\n                        Atualizar\n                    </Button>\n                }\n                {!update &&\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\">\n                        Salvar\n                    </Button>\n                }\n                <Button\n                    type=\"danger\"\n                    onClick={redirect}\n                    htmlType=\"submit\"\n                    style={{ marginLeft: '2px' }}\n                >\n                    Cancelar\n                        </Button>\n\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormUsuario;"]},"metadata":{},"sourceType":"module"}