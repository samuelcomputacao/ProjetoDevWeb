{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/perfil.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Form, Input, Button, Divider, notification, Modal, InputNumber, DatePicker } from 'antd';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nimport api from '../../../service/api';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarErro, notificarSucesso } from '../../components/Notificacao';\nimport { getKeyUsuarioLogado } from '../../../service/usuario';\nimport { useHistory } from 'react-router-dom';\nconst {\n  Item\n} = Breadcrumb;\n\nfunction PerfilPedidos({\n  location\n}) {\n  const [data, setData] = useState('');\n  const [quantidade, setQuantidade] = useState(1);\n  const [pedido, setPedido] = useState([]);\n  const [dateString, setDateString] = useState('');\n  const [hortalica, setHortalica] = useState({});\n  const [valorTotal, setValorTotal] = useState(0);\n  const historico = useHistory();\n  const loading = false;\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n  const [cadastro, setCadastro] = useState(false);\n  const [keyPedido, setKeyPedido] = useState('');\n  const [pedidoVisualizacao, setPedidoVisualizacao] = useState({});\n  useEffect(() => {\n    async function verificaParams() {\n      const params = new URLSearchParams(location.search);\n      const tipo = params.get('cadastro');\n      const key = params.get('key');\n      setCadastro(true);\n\n      if (tipo === '0') {\n        setKeyPedido(key);\n        setCadastro(false);\n        const {\n          data\n        } = await api.get(`/pedido/${key}`);\n        setPedidoVisualizacao(data);\n      }\n    }\n\n    verificaParams();\n  }, [location]);\n  const acoes = {\n    title: 'Inserir',\n    dataIndex: 'inserir',\n    key: 'inserir',\n    render: (_, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(ArrowRightOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      onClick: _ => {\n        setHortalica(record);\n        showModal();\n      },\n      title: \"Inserir\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))\n  };\n\n  const openNotification = (msg, descricao) => {\n    notification.open({\n      message: `${msg}`,\n      description: `${descricao}`\n    });\n  };\n\n  const acoesPedido = {\n    title: 'Remover',\n    dataIndex: 'remover',\n    key: 'remover',\n    render: (_, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '2px'\n      },\n      icon: React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      danger: true,\n      onClick: _ => {\n        removerPedido(record.key);\n      },\n      title: \"Remover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))\n  };\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 5\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 5\n    }\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const salvarPedido = async () => {\n    let listaHortalicas = [];\n    await pedido.forEach(pedido => {\n      listaHortalicas = [...listaHortalicas, {\n        keyHortalica: pedido.key,\n        quantidade: pedido.quantidade\n      }];\n    });\n    const pedidoRequisicao = {\n      data: dateString,\n      hortalicas: listaHortalicas\n    };\n\n    try {\n      await api.post('/pedido', pedidoRequisicao, {\n        params: {\n          keyUsuario: getKeyUsuarioLogado()\n        }\n      });\n      notificarSucesso('Pedido cadastrado com sucesso.');\n      historico.push('/pedidos');\n    } catch (e) {\n      notificarErro(e.response.data.mensagem);\n    }\n  };\n\n  const inserirHortalica = () => {\n    if (quantidade <= 0) {\n      notificarErro('Quantidade inválida.');\n    } else {\n      let possui = false;\n      pedido.forEach(hort => {\n        if (hort.key === hortalica.key) {\n          possui = true;\n        }\n      });\n\n      if (!possui) {\n        setPedido([...pedido, { ...hortalica,\n          quantidade\n        }]);\n        setValorTotal(valorTotal + hortalica.valor * quantidade);\n        setHandlerUpdateTable(!handlerUpdateTable);\n        setQuantidade(1);\n      } else {\n        openNotification('Aviso!', 'A hortaliça já foi adicionada!');\n      }\n\n      handleCancel();\n    }\n  };\n\n  const removerPedido = key => {\n    let pedidoAux = [];\n    let valorReferencia = 0;\n    pedido.forEach(hort => {\n      if (hort.key !== key) {\n        pedidoAux = [...pedidoAux, hort];\n      } else {\n        valorReferencia = hort.valor * hort.quantidade;\n      }\n    });\n    showConfirm('Remover hortaliça', `Deseja remover a hortaliça de código: ${key}?`, atualizarPedido, {\n      pedidoAux,\n      valorReferencia\n    });\n  };\n\n  const atualizarPedido = async ({\n    pedidoAux,\n    valorReferencia\n  }) => {\n    await setPedido(pedidoAux);\n    setValorTotal(valorTotal - valorReferencia);\n  };\n\n  const getPedidos = () => {\n    return pedido;\n  };\n\n  const getHortalicas = async () => {\n    const {\n      data\n    } = await api.get('/hortalica');\n    return data;\n  };\n\n  const onChangeData = (date, dateString) => {\n    setData(date);\n    setDateString(dateString);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Item, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Principal\"), React.createElement(Item, {\n    href: \"/pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Pedidos\"), React.createElement(Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, cadastro && 'Cadastrar', cadastro === false && 'Visualizar')), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, cadastro && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Titulo, {\n    nome: \"Cadastro de Pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"Hortali\\xE7as\"), React.createElement(TabelaHortalicas, {\n    getData: getHortalicas,\n    acoes: acoes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Pedido\"), React.createElement(TabelaHortalicas, {\n    getData: getPedidos,\n    acoes: acoesPedido,\n    handleUpdateTable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), React.createElement(Form, Object.assign({}, layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Valor Total: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), React.createElement(Input, {\n    readOnly: true,\n    value: valorTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Data: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }), React.createElement(DatePicker, {\n    value: data,\n    onChange: onChangeData,\n    format: 'DD/MM/YYYY',\n    locale: 'pt-BR',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    type: \"primary  \",\n    onClick: salvarPedido,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Salvar\"), React.createElement(Modal, {\n    title: \"Quantidade\",\n    visible: visible,\n    onOk: handleOk,\n    confirmLoading: confirmLoading,\n    onCancel: handleCancel,\n    footer: [React.createElement(Button, {\n      key: \"back\",\n      onClick: handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Cancelar\"), React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: loading,\n      onClick: inserirHortalica,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Adicionar\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    label: \"Quantidade: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }), React.createElement(InputNumber, {\n    min: 1,\n    onChange: value => {\n      setQuantidade(value);\n    },\n    value: quantidade,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  })));\n}\n\nexport default PerfilPedidos;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/perfil.js"],"names":["React","useState","useEffect","ArrowRightOutlined","DeleteOutlined","Form","Input","Button","Divider","notification","Modal","InputNumber","DatePicker","Breadcrumb","Container","Titulo","TabelaHortalicas","api","showConfirm","notificarErro","notificarSucesso","getKeyUsuarioLogado","useHistory","Item","PerfilPedidos","location","data","setData","quantidade","setQuantidade","pedido","setPedido","dateString","setDateString","hortalica","setHortalica","valorTotal","setValorTotal","historico","loading","visible","setVisible","confirmLoading","setConfirmLoading","handlerUpdateTable","setHandlerUpdateTable","cadastro","setCadastro","keyPedido","setKeyPedido","pedidoVisualizacao","setPedidoVisualizacao","verificaParams","params","URLSearchParams","search","tipo","get","key","acoes","title","dataIndex","render","_","record","marginLeft","showModal","openNotification","msg","descricao","open","message","description","acoesPedido","removerPedido","layout","labelCol","span","wrapperCol","tailLayout","offset","handleOk","setTimeout","handleCancel","salvarPedido","listaHortalicas","forEach","keyHortalica","pedidoRequisicao","hortalicas","post","keyUsuario","push","e","response","mensagem","inserirHortalica","possui","hort","valor","pedidoAux","valorReferencia","atualizarPedido","getPedidos","getHortalicas","onChangeData","date","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ArrowRightOutlined, DeleteOutlined } from '@ant-design/icons';\nimport {\n    Form,\n    Input,\n    Button,\n    Divider,\n    notification,\n    Modal,\n    InputNumber,\n    DatePicker\n} from 'antd';\n\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nimport api from '../../../service/api';\nimport { showConfirm } from '../../components/ConfirmAcao';\nimport { notificarErro, notificarSucesso } from '../../components/Notificacao';\nimport { getKeyUsuarioLogado } from '../../../service/usuario';\nimport { useHistory } from 'react-router-dom';\nconst { Item } = Breadcrumb;\n\n\nfunction PerfilPedidos({ location }) {\n\n    const [data, setData] = useState('');\n    const [quantidade, setQuantidade] = useState(1);\n    const [pedido, setPedido] = useState([]);\n    const [dateString, setDateString] = useState('');\n    const [hortalica, setHortalica] = useState({});\n    const [valorTotal, setValorTotal] = useState(0);\n    const historico = useHistory();\n    const loading = false;\n    const [visible, setVisible] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [handlerUpdateTable, setHandlerUpdateTable] = useState(false);\n\n    const [cadastro, setCadastro] = useState(false);\n    const [keyPedido, setKeyPedido] = useState('');\n    const [pedidoVisualizacao, setPedidoVisualizacao] = useState({});\n\n\n    useEffect(() => {\n        async function verificaParams() {\n            const params = new URLSearchParams(location.search);\n            const tipo = params.get('cadastro');\n            const key = params.get('key');\n            setCadastro(true);\n            if (tipo === '0') {\n                setKeyPedido(key);\n                setCadastro(false);\n                const { data } = await api.get(`/pedido/${key}`);\n                setPedidoVisualizacao(data);\n            }\n        }\n        verificaParams();\n    }, [location]);\n\n    const acoes = {\n        title: 'Inserir',\n        dataIndex: 'inserir',\n        key: 'inserir',\n        render: (_, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<ArrowRightOutlined />}\n                    onClick={_ => {\n                        setHortalica(record);\n                        showModal();\n                    }}\n                    title='Inserir'\n                />\n            </span>\n        )\n    }\n\n    const openNotification = (msg, descricao) => {\n        notification.open({\n            message: `${msg}`,\n            description:\n                `${descricao}`,\n        });\n    };\n\n    const acoesPedido = {\n        title: 'Remover',\n        dataIndex: 'remover',\n        key: 'remover',\n        render: (_, record) => (\n            <span>\n                <Button\n                    type='primary'\n                    style={{ marginLeft: '2px' }}\n                    icon={<DeleteOutlined />}\n                    danger\n                    onClick={_ => {\n                        removerPedido(record.key);\n                    }}\n                    title='Remover'\n                />\n            </span>\n        )\n    }\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 5,\n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: {\n            offset: 2,\n            span: 5,\n        },\n    };\n\n    const showModal = () => {\n        setVisible(true);\n    };\n\n    const handleOk = () => {\n        setConfirmLoading(true)\n        setTimeout(() => {\n            setVisible(false);\n            setConfirmLoading(false);\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        setVisible(false);\n    };\n\n    const salvarPedido = async () => {\n        let listaHortalicas = [];\n        await pedido.forEach((pedido) => {\n            listaHortalicas = [...listaHortalicas, {\n                keyHortalica: pedido.key,\n                quantidade:\n                    pedido.quantidade\n            }];\n        });\n\n        const pedidoRequisicao = {\n            data: dateString,\n            hortalicas: listaHortalicas\n        };\n        try {\n            await api.post('/pedido', pedidoRequisicao, { params: { keyUsuario: getKeyUsuarioLogado() } });\n            notificarSucesso('Pedido cadastrado com sucesso.');\n            historico.push('/pedidos');\n        } catch (e) {\n            notificarErro(e.response.data.mensagem);\n        }\n    }\n\n    const inserirHortalica = () => {\n        if (quantidade <= 0) {\n            notificarErro('Quantidade inválida.');\n        } else {\n            let possui = false;\n            pedido.forEach((hort) => {\n                if (hort.key === hortalica.key) {\n                    possui = true;\n                }\n            });\n            if (!possui) {\n                setPedido([...pedido, { ...hortalica, quantidade }])\n                setValorTotal(valorTotal + (hortalica.valor * quantidade));\n                setHandlerUpdateTable(!handlerUpdateTable);\n                setQuantidade(1);\n            } else {\n                openNotification('Aviso!', 'A hortaliça já foi adicionada!');\n            }\n            handleCancel();\n        }\n    }\n\n    const removerPedido = (key) => {\n        let pedidoAux = [];\n        let valorReferencia = 0;\n        pedido.forEach((hort) => {\n            if (hort.key !== key) {\n                pedidoAux = [...pedidoAux, hort];\n            } else {\n                valorReferencia = hort.valor * hort.quantidade;\n            }\n        });\n        showConfirm('Remover hortaliça', `Deseja remover a hortaliça de código: ${key}?`, atualizarPedido, { pedidoAux, valorReferencia });\n    }\n\n    const atualizarPedido = async ({ pedidoAux, valorReferencia }) => {\n        await setPedido(pedidoAux);\n        setValorTotal(valorTotal - valorReferencia);\n    }\n\n\n    const getPedidos = () => {\n        return pedido;\n    }\n\n    const getHortalicas = async () => {\n        const { data } = await api.get('/hortalica');\n        return data;\n    }\n\n    const onChangeData = (date, dateString) => {\n        setData(date);\n        setDateString(dateString);\n    }\n\n\n    return (\n        <div>\n            <Breadcrumb>\n                <Item href=\"/\">Principal</Item>\n                <Item href=\"/pedidos\">Pedidos</Item>\n                <Item active>\n                    {cadastro && 'Cadastrar'}\n                    {(cadastro===false) && 'Visualizar'}\n                </Item>\n            </Breadcrumb>\n            <Container>\n                {cadastro && <div>\n                    <Titulo nome='Cadastro de Pedidos' />\n                    <Divider />\n                    <h2>Hortaliças</h2>\n                    <TabelaHortalicas getData={getHortalicas} acoes={acoes} />\n                    <Divider />\n                </div>}\n                <h2>Pedido</h2>\n                <TabelaHortalicas getData={getPedidos} acoes={acoesPedido} handleUpdateTable />\n                <Divider />\n                <Form {...layout}>\n                    <Form.Item\n                        {...tailLayout}\n                        label='Valor Total: '>\n                        <Input readOnly value={valorTotal} />\n                    </Form.Item>\n                    <Form.Item\n                        {...tailLayout}\n                        label='Data: '>\n                        <DatePicker value={data} onChange={onChangeData} format={'DD/MM/YYYY'} locale={'pt-BR'} />\n                    </Form.Item>\n                </Form>\n                <Button type='primary  ' onClick={salvarPedido}>Salvar</Button>\n                <Modal\n                    title=\"Quantidade\"\n                    visible={visible}\n                    onOk={handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={handleCancel}\n                    footer={[\n                        <Button key=\"back\" onClick={handleCancel}>\n                            Cancelar\n                            </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={loading} onClick={inserirHortalica}>\n                            Adicionar\n                            </Button>,\n                    ]}\n\n                >\n                    <Form {...layout}>\n                        <Form.Item {...tailLayout}\n                            label='Quantidade: '\n                        >\n                            <InputNumber min={1} onChange={(value) => {\n                                setQuantidade(value);\n                            }} value={quantidade} />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n                <Divider />\n            </Container>\n        </div>\n    );\n}\nexport default PerfilPedidos;"]},"metadata":{},"sourceType":"module"}