{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/cadastrar.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button, Select, InputNumber, Divider, notification } from 'antd';\nimport Menu from '../../components/Menu';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nconst {\n  Item\n} = Breadcrumb;\n\nfunction CadastroPedidos() {\n  const hortalicas = [{\n    key: '1',\n    nome: 'Alface',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: '2,00'\n  }, {\n    key: '2',\n    nome: 'Alface',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: '2,00'\n  }, {\n    key: '3',\n    nome: 'Alface',\n    categoria: 'Folhas',\n    classificacao: '5',\n    valor: '2,00'\n  }];\n  const [categorias, setCategorias] = useState(['Folhas', 'Temperos', 'Legumes', 'Raizes']);\n  const [nome, setNome] = useState('');\n  const [categoria, setCategoria] = useState('');\n  const [valor, setValor] = useState(0);\n  const history = useHistory();\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    console.log('formChange');\n  };\n\n  const onFinish = values => {\n    setNome(values.nome);\n    setCategoria(values.categoria);\n    setValor(values.valor);\n    openNotification();\n    setTimeout(redirect, 1000);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 5,\n      span: 16\n    }\n  };\n\n  const openNotification = () => {\n    notification.open({\n      message: 'Salvo',\n      description: 'A Hortaliça foi salva com sucesso',\n      onClick: () => {\n        console.log('Notification Clicked!');\n      }\n    });\n  };\n\n  const redirect = () => {\n    history.goBack();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Item, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Principal\"), React.createElement(Item, {\n    href: \"/pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Pedidos\"), React.createElement(Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Cadastrar\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Titulo, {\n    name: \"Cadastro de Pedidos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Hortali\\xE7as\"), React.createElement(TabelaHortalicas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Pedido\"), React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    onValuesChange: onFormLayoutChange,\n    size: \"larger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Hortalica\",\n    name: \"nome\",\n    rules: [{\n      required: true,\n      message: 'O nome é obrigatorio!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, hortalicas.map(hort => {\n    return React.createElement(Select.Option, {\n      value: hort.key,\n      key: hort.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, hort.nome);\n  }))), React.createElement(Form.Item, {\n    label: \"Data\",\n    name: \"data\",\n    rules: [{\n      required: true,\n      message: 'A Data é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Quantidade\",\n    name: \"quantidade\",\n    rules: [{\n      required: true,\n      message: 'A Quantidade é obrigatoria!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    defaultValue: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Salvar\")))));\n}\n\nexport default CadastroPedidos;","map":{"version":3,"sources":["/home/samuel/Documentos/repositorios/ProjetoDevWeb/frontend/src/protected/pages/Pedidos/cadastrar.js"],"names":["React","useState","useHistory","Form","Input","Button","Select","InputNumber","Divider","notification","Menu","Breadcrumb","Container","Titulo","TabelaHortalicas","Item","CadastroPedidos","hortalicas","key","nome","categoria","classificacao","valor","categorias","setCategorias","setNome","setCategoria","setValor","history","onFormLayoutChange","size","console","log","onFinish","values","openNotification","setTimeout","redirect","onFinishFailed","errorInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","open","message","description","onClick","goBack","remember","required","map","hort"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n    InputNumber,\n    Divider,\n    notification\n} from 'antd';\n\nimport Menu from '../../components/Menu';\nimport { Breadcrumb, Container } from 'react-bootstrap';\nimport Titulo from '../../components/Titulo';\nimport TabelaHortalicas from '../../components/TabelaHortalicas';\nconst { Item } = Breadcrumb;\n\n\nfunction CadastroPedidos() {\n    const hortalicas = [\n        {\n            key: '1',\n            nome: 'Alface',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: '2,00'\n        },\n        {\n            key: '2',\n            nome: 'Alface',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: '2,00',\n        },\n        {\n            key: '3',\n            nome: 'Alface',\n            categoria: 'Folhas',\n            classificacao: '5',\n            valor: '2,00',\n        },\n    ];\n\n    const [categorias, setCategorias] = useState(['Folhas', 'Temperos', 'Legumes', 'Raizes']);\n    const [nome, setNome] = useState('');\n    const [categoria, setCategoria] = useState('');\n    const [valor, setValor] = useState(0);\n\n    const history = useHistory();\n\n    const onFormLayoutChange = ({ size }) => {\n        console.log('formChange');\n    };\n\n    const onFinish = values => {\n        setNome(values.nome);\n        setCategoria(values.categoria);\n        setValor(values.valor);\n        openNotification();\n        setTimeout(redirect, 1000);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const layout = {\n        labelCol: {\n            span: 5,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 5,\n            span: 16,\n        },\n    };\n\n    const openNotification = () => {\n        notification.open({\n            message: 'Salvo',\n            description:\n                'A Hortaliça foi salva com sucesso',\n            onClick: () => {\n                console.log('Notification Clicked!');\n            },\n        });\n    };\n\n    const redirect = () => {\n        history.goBack();\n    }\n\n\n    return (\n        <div>\n            <Menu />\n            <Breadcrumb>\n                <Item href=\"/\">Principal</Item>\n                <Item href=\"/pedidos\">Pedidos</Item>\n                <Item active >Cadastrar</Item>\n            </Breadcrumb>\n            <Container>\n                <Titulo name='Cadastro de Pedidos' />\n                <Divider />\n                <h2>Hortaliças</h2>\n                <TabelaHortalicas/>\n                <Divider/>\n                <h2>Pedido</h2>\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    onValuesChange={onFormLayoutChange}\n                    size='larger'>\n                    <Form.Item\n                        label='Hortalica'\n                        name=\"nome\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'O nome é obrigatorio!'\n                            }]}\n                    >\n                        <Select>\n                            {\n                                hortalicas.map((hort) => {\n                                    return (<Select.Option value={hort.key} key={hort.key}>{hort.nome}</Select.Option>)\n                                })\n                            }\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label='Data'\n                        name=\"data\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'A Data é obrigatoria!',\n                            }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label='Quantidade'\n                        name=\"quantidade\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'A Quantidade é obrigatoria!',\n                            }]}\n                    >\n                        <InputNumber defaultValue={0} />\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                        >\n                            Salvar\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Container>\n        </div>\n    );\n}\n\nexport default CadastroPedidos;"]},"metadata":{},"sourceType":"module"}